[
  {
    "rule_id": "eslint-accessor-pairs",
    "name": "accessor-pairs",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: accessor-pairs",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-array-bracket-newline",
    "name": "array-bracket-newline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: array-bracket-newline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-array-bracket-spacing",
    "name": "array-bracket-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: array-bracket-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-array-callback-return",
    "name": "array-callback-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: array-callback-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-array-element-newline",
    "name": "array-element-newline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: array-element-newline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-arrow-body-style",
    "name": "arrow-body-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: arrow-body-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-arrow-parens",
    "name": "arrow-parens",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: arrow-parens",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-arrow-spacing",
    "name": "arrow-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: arrow-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-block-scoped-var",
    "name": "block-scoped-var",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: block-scoped-var",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-block-spacing",
    "name": "block-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: block-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-brace-style",
    "name": "brace-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: brace-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-callback-return",
    "name": "callback-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: callback-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-capitalized-comments",
    "name": "capitalized-comments",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: capitalized-comments",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-class-methods-use-this",
    "name": "class-methods-use-this",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: class-methods-use-this",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-comma-dangle",
    "name": "comma-dangle",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: comma-dangle",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-comma-spacing",
    "name": "comma-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: comma-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-comma-style",
    "name": "comma-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: comma-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-computed-property-spacing",
    "name": "computed-property-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: computed-property-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-consistent-return",
    "name": "consistent-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: consistent-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-consistent-this",
    "name": "consistent-this",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: consistent-this",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-constructor-super",
    "name": "constructor-super",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: constructor-super",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-default-case",
    "name": "default-case",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: default-case",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-default-case-last",
    "name": "default-case-last",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: default-case-last",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-default-param-last",
    "name": "default-param-last",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: default-param-last",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-dot-location",
    "name": "dot-location",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: dot-location",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-dot-notation",
    "name": "dot-notation",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: dot-notation",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-eol-last",
    "name": "eol-last",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: eol-last",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-for-direction",
    "name": "for-direction",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: for-direction",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-func-call-spacing",
    "name": "func-call-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: func-call-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-func-name-matching",
    "name": "func-name-matching",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: func-name-matching",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-func-names",
    "name": "func-names",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: func-names",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-func-style",
    "name": "func-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: func-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-function-call-argument-newline",
    "name": "function-call-argument-newline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: function-call-argument-newline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-function-paren-newline",
    "name": "function-paren-newline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: function-paren-newline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-generator-star-spacing",
    "name": "generator-star-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: generator-star-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-getter-return",
    "name": "getter-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: getter-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-global-require",
    "name": "global-require",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: global-require",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-grouped-accessor-pairs",
    "name": "grouped-accessor-pairs",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: grouped-accessor-pairs",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-guard-for-in",
    "name": "guard-for-in",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: guard-for-in",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-handle-callback-err",
    "name": "handle-callback-err",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: handle-callback-err",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-id-blacklist",
    "name": "id-blacklist",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: id-blacklist",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-id-denylist",
    "name": "id-denylist",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: id-denylist",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-id-length",
    "name": "id-length",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: id-length",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-id-match",
    "name": "id-match",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: id-match",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-implicit-arrow-linebreak",
    "name": "implicit-arrow-linebreak",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: implicit-arrow-linebreak",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-indent-legacy",
    "name": "indent-legacy",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: indent-legacy",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-init-declarations",
    "name": "init-declarations",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: init-declarations",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-jsx-quotes",
    "name": "jsx-quotes",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: jsx-quotes",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-key-spacing",
    "name": "key-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: key-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-keyword-spacing",
    "name": "keyword-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: keyword-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-line-comment-position",
    "name": "line-comment-position",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: line-comment-position",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-linebreak-style",
    "name": "linebreak-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: linebreak-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-lines-around-comment",
    "name": "lines-around-comment",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: lines-around-comment",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-lines-around-directive",
    "name": "lines-around-directive",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: lines-around-directive",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-lines-between-class-members",
    "name": "lines-between-class-members",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: lines-between-class-members",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-logical-assignment-operators",
    "name": "logical-assignment-operators",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: logical-assignment-operators",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-classes-per-file",
    "name": "max-classes-per-file",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-classes-per-file",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-depth",
    "name": "max-depth",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-depth",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-len",
    "name": "max-len",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-len",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-lines",
    "name": "max-lines",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-lines",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-lines-per-function",
    "name": "max-lines-per-function",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-lines-per-function",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-nested-callbacks",
    "name": "max-nested-callbacks",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-nested-callbacks",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-params",
    "name": "max-params",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-params",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-statements",
    "name": "max-statements",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-statements",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-max-statements-per-line",
    "name": "max-statements-per-line",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: max-statements-per-line",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-multiline-comment-style",
    "name": "multiline-comment-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: multiline-comment-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-multiline-ternary",
    "name": "multiline-ternary",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: multiline-ternary",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-new-cap",
    "name": "new-cap",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: new-cap",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-new-parens",
    "name": "new-parens",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: new-parens",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-newline-after-var",
    "name": "newline-after-var",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: newline-after-var",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-newline-before-return",
    "name": "newline-before-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: newline-before-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-newline-per-chained-call",
    "name": "newline-per-chained-call",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: newline-per-chained-call",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-alert",
    "name": "no-alert",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-alert",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-array-constructor",
    "name": "no-array-constructor",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-array-constructor",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-async-promise-executor",
    "name": "no-async-promise-executor",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-async-promise-executor",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-await-in-loop",
    "name": "no-await-in-loop",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-await-in-loop",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-bitwise",
    "name": "no-bitwise",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-bitwise",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-buffer-constructor",
    "name": "no-buffer-constructor",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-buffer-constructor",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-caller",
    "name": "no-caller",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-caller",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-case-declarations",
    "name": "no-case-declarations",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-case-declarations",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-catch-shadow",
    "name": "no-catch-shadow",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-catch-shadow",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-class-assign",
    "name": "no-class-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-class-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-compare-neg-zero",
    "name": "no-compare-neg-zero",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-compare-neg-zero",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-cond-assign",
    "name": "no-cond-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-cond-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-confusing-arrow",
    "name": "no-confusing-arrow",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-confusing-arrow",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-console",
    "name": "no-console",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-console",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-const-assign",
    "name": "no-const-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-const-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-constant-binary-expression",
    "name": "no-constant-binary-expression",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-constant-binary-expression",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-constant-condition",
    "name": "no-constant-condition",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-constant-condition",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-constructor-return",
    "name": "no-constructor-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-constructor-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-continue",
    "name": "no-continue",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-continue",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-control-regex",
    "name": "no-control-regex",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-control-regex",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-debugger",
    "name": "no-debugger",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-debugger",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-delete-var",
    "name": "no-delete-var",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-delete-var",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-div-regex",
    "name": "no-div-regex",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-div-regex",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-dupe-args",
    "name": "no-dupe-args",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-dupe-args",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-dupe-class-members",
    "name": "no-dupe-class-members",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-dupe-class-members",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-dupe-else-if",
    "name": "no-dupe-else-if",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-dupe-else-if",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-dupe-keys",
    "name": "no-dupe-keys",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-dupe-keys",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-duplicate-case",
    "name": "no-duplicate-case",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-duplicate-case",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-duplicate-imports",
    "name": "no-duplicate-imports",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-duplicate-imports",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-else-return",
    "name": "no-else-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-else-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-empty",
    "name": "no-empty",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-empty",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-empty-character-class",
    "name": "no-empty-character-class",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-empty-character-class",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-empty-function",
    "name": "no-empty-function",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-empty-function",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-empty-pattern",
    "name": "no-empty-pattern",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-empty-pattern",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-empty-static-block",
    "name": "no-empty-static-block",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-empty-static-block",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-eq-null",
    "name": "no-eq-null",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-eq-null",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-eval",
    "name": "no-eval",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-eval",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-ex-assign",
    "name": "no-ex-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-ex-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-extend-native",
    "name": "no-extend-native",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-extend-native",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-extra-bind",
    "name": "no-extra-bind",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-extra-bind",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-extra-boolean-cast",
    "name": "no-extra-boolean-cast",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-extra-boolean-cast",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-extra-label",
    "name": "no-extra-label",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-extra-label",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-extra-parens",
    "name": "no-extra-parens",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-extra-parens",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-extra-semi",
    "name": "no-extra-semi",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-extra-semi",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-fallthrough",
    "name": "no-fallthrough",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-fallthrough",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-floating-decimal",
    "name": "no-floating-decimal",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-floating-decimal",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-func-assign",
    "name": "no-func-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-func-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-global-assign",
    "name": "no-global-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-global-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-implicit-coercion",
    "name": "no-implicit-coercion",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-implicit-coercion",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-implicit-globals",
    "name": "no-implicit-globals",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-implicit-globals",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-implied-eval",
    "name": "no-implied-eval",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-implied-eval",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-import-assign",
    "name": "no-import-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-import-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-inline-comments",
    "name": "no-inline-comments",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-inline-comments",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-inner-declarations",
    "name": "no-inner-declarations",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-inner-declarations",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-invalid-regexp",
    "name": "no-invalid-regexp",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-invalid-regexp",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-invalid-this",
    "name": "no-invalid-this",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-invalid-this",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-irregular-whitespace",
    "name": "no-irregular-whitespace",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-irregular-whitespace",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-iterator",
    "name": "no-iterator",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-iterator",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-label-var",
    "name": "no-label-var",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-label-var",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-labels",
    "name": "no-labels",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-labels",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-lone-blocks",
    "name": "no-lone-blocks",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-lone-blocks",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-lonely-if",
    "name": "no-lonely-if",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-lonely-if",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-loop-func",
    "name": "no-loop-func",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-loop-func",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-loss-of-precision",
    "name": "no-loss-of-precision",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-loss-of-precision",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-magic-numbers",
    "name": "no-magic-numbers",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-magic-numbers",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-misleading-character-class",
    "name": "no-misleading-character-class",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-misleading-character-class",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-mixed-operators",
    "name": "no-mixed-operators",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-mixed-operators",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-mixed-requires",
    "name": "no-mixed-requires",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-mixed-requires",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-mixed-spaces-and-tabs",
    "name": "no-mixed-spaces-and-tabs",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-mixed-spaces-and-tabs",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-multi-assign",
    "name": "no-multi-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-multi-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-multi-spaces",
    "name": "no-multi-spaces",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-multi-spaces",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-multi-str",
    "name": "no-multi-str",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-multi-str",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-multiple-empty-lines",
    "name": "no-multiple-empty-lines",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-multiple-empty-lines",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-native-reassign",
    "name": "no-native-reassign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-native-reassign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-negated-condition",
    "name": "no-negated-condition",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-negated-condition",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-negated-in-lhs",
    "name": "no-negated-in-lhs",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-negated-in-lhs",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-nested-ternary",
    "name": "no-nested-ternary",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-nested-ternary",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new",
    "name": "no-new",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new-func",
    "name": "no-new-func",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new-func",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new-native-nonconstructor",
    "name": "no-new-native-nonconstructor",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new-native-nonconstructor",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new-object",
    "name": "no-new-object",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new-object",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new-require",
    "name": "no-new-require",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new-require",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new-symbol",
    "name": "no-new-symbol",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new-symbol",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-new-wrappers",
    "name": "no-new-wrappers",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-new-wrappers",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-nonoctal-decimal-escape",
    "name": "no-nonoctal-decimal-escape",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-nonoctal-decimal-escape",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-obj-calls",
    "name": "no-obj-calls",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-obj-calls",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-object-constructor",
    "name": "no-object-constructor",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-object-constructor",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-octal",
    "name": "no-octal",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-octal",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-octal-escape",
    "name": "no-octal-escape",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-octal-escape",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-param-reassign",
    "name": "no-param-reassign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-param-reassign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-path-concat",
    "name": "no-path-concat",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-path-concat",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-plusplus",
    "name": "no-plusplus",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-plusplus",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-process-env",
    "name": "no-process-env",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-process-env",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-process-exit",
    "name": "no-process-exit",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-process-exit",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-promise-executor-return",
    "name": "no-promise-executor-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-promise-executor-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-proto",
    "name": "no-proto",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-proto",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-prototype-builtins",
    "name": "no-prototype-builtins",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-prototype-builtins",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-redeclare",
    "name": "no-redeclare",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-redeclare",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-regex-spaces",
    "name": "no-regex-spaces",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-regex-spaces",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-restricted-exports",
    "name": "no-restricted-exports",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-restricted-exports",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-restricted-globals",
    "name": "no-restricted-globals",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-restricted-globals",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-restricted-imports",
    "name": "no-restricted-imports",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-restricted-imports",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-restricted-modules",
    "name": "no-restricted-modules",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-restricted-modules",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-restricted-properties",
    "name": "no-restricted-properties",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-restricted-properties",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-restricted-syntax",
    "name": "no-restricted-syntax",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-restricted-syntax",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-return-assign",
    "name": "no-return-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-return-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-return-await",
    "name": "no-return-await",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-return-await",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-script-url",
    "name": "no-script-url",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-script-url",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-self-assign",
    "name": "no-self-assign",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-self-assign",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-self-compare",
    "name": "no-self-compare",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-self-compare",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-sequences",
    "name": "no-sequences",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-sequences",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-setter-return",
    "name": "no-setter-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-setter-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-shadow",
    "name": "no-shadow",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-shadow",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-shadow-restricted-names",
    "name": "no-shadow-restricted-names",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-shadow-restricted-names",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-spaced-func",
    "name": "no-spaced-func",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-spaced-func",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-sparse-arrays",
    "name": "no-sparse-arrays",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-sparse-arrays",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-sync",
    "name": "no-sync",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-sync",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-tabs",
    "name": "no-tabs",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-tabs",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-template-curly-in-string",
    "name": "no-template-curly-in-string",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-template-curly-in-string",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-ternary",
    "name": "no-ternary",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-ternary",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-this-before-super",
    "name": "no-this-before-super",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-this-before-super",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-throw-literal",
    "name": "no-throw-literal",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-throw-literal",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-trailing-spaces",
    "name": "no-trailing-spaces",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-trailing-spaces",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unassigned-vars",
    "name": "no-unassigned-vars",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unassigned-vars",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-undef",
    "name": "no-undef",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-undef",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-undef-init",
    "name": "no-undef-init",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-undef-init",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-undefined",
    "name": "no-undefined",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-undefined",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-underscore-dangle",
    "name": "no-underscore-dangle",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-underscore-dangle",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unexpected-multiline",
    "name": "no-unexpected-multiline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unexpected-multiline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unmodified-loop-condition",
    "name": "no-unmodified-loop-condition",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unmodified-loop-condition",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unneeded-ternary",
    "name": "no-unneeded-ternary",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unneeded-ternary",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unreachable",
    "name": "no-unreachable",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unreachable",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unreachable-loop",
    "name": "no-unreachable-loop",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unreachable-loop",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unsafe-finally",
    "name": "no-unsafe-finally",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unsafe-finally",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unsafe-negation",
    "name": "no-unsafe-negation",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unsafe-negation",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unsafe-optional-chaining",
    "name": "no-unsafe-optional-chaining",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unsafe-optional-chaining",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unused-expressions",
    "name": "no-unused-expressions",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unused-expressions",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unused-labels",
    "name": "no-unused-labels",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unused-labels",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unused-private-class-members",
    "name": "no-unused-private-class-members",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unused-private-class-members",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-unused-vars",
    "name": "no-unused-vars",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-unused-vars",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-use-before-define",
    "name": "no-use-before-define",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-use-before-define",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-assignment",
    "name": "no-useless-assignment",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-assignment",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-backreference",
    "name": "no-useless-backreference",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-backreference",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-call",
    "name": "no-useless-call",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-call",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-catch",
    "name": "no-useless-catch",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-catch",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-computed-key",
    "name": "no-useless-computed-key",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-computed-key",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-concat",
    "name": "no-useless-concat",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-concat",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-constructor",
    "name": "no-useless-constructor",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-constructor",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-escape",
    "name": "no-useless-escape",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-escape",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-rename",
    "name": "no-useless-rename",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-rename",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-useless-return",
    "name": "no-useless-return",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-useless-return",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-var",
    "name": "no-var",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-var",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-void",
    "name": "no-void",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-void",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-warning-comments",
    "name": "no-warning-comments",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-warning-comments",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-whitespace-before-property",
    "name": "no-whitespace-before-property",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-whitespace-before-property",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-no-with",
    "name": "no-with",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: no-with",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-nonblock-statement-body-position",
    "name": "nonblock-statement-body-position",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: nonblock-statement-body-position",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-object-curly-newline",
    "name": "object-curly-newline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: object-curly-newline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-object-curly-spacing",
    "name": "object-curly-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: object-curly-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-object-property-newline",
    "name": "object-property-newline",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: object-property-newline",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-object-shorthand",
    "name": "object-shorthand",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: object-shorthand",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-one-var",
    "name": "one-var",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: one-var",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-one-var-declaration-per-line",
    "name": "one-var-declaration-per-line",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: one-var-declaration-per-line",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-operator-assignment",
    "name": "operator-assignment",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: operator-assignment",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-operator-linebreak",
    "name": "operator-linebreak",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: operator-linebreak",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-padded-blocks",
    "name": "padded-blocks",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: padded-blocks",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-padding-line-between-statements",
    "name": "padding-line-between-statements",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: padding-line-between-statements",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-arrow-callback",
    "name": "prefer-arrow-callback",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-arrow-callback",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-const",
    "name": "prefer-const",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-const",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-destructuring",
    "name": "prefer-destructuring",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-destructuring",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-exponentiation-operator",
    "name": "prefer-exponentiation-operator",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-exponentiation-operator",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-named-capture-group",
    "name": "prefer-named-capture-group",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-named-capture-group",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-numeric-literals",
    "name": "prefer-numeric-literals",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-numeric-literals",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-object-has-own",
    "name": "prefer-object-has-own",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-object-has-own",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-object-spread",
    "name": "prefer-object-spread",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-object-spread",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-promise-reject-errors",
    "name": "prefer-promise-reject-errors",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-promise-reject-errors",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-reflect",
    "name": "prefer-reflect",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-reflect",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-regex-literals",
    "name": "prefer-regex-literals",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-regex-literals",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-rest-params",
    "name": "prefer-rest-params",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-rest-params",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-spread",
    "name": "prefer-spread",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-spread",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-prefer-template",
    "name": "prefer-template",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: prefer-template",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-quote-props",
    "name": "quote-props",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: quote-props",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-require-atomic-updates",
    "name": "require-atomic-updates",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: require-atomic-updates",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-require-await",
    "name": "require-await",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: require-await",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-require-unicode-regexp",
    "name": "require-unicode-regexp",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: require-unicode-regexp",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-require-yield",
    "name": "require-yield",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: require-yield",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-rest-spread-spacing",
    "name": "rest-spread-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: rest-spread-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-semi-spacing",
    "name": "semi-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: semi-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-semi-style",
    "name": "semi-style",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: semi-style",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-sort-imports",
    "name": "sort-imports",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: sort-imports",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-sort-keys",
    "name": "sort-keys",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: sort-keys",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-sort-vars",
    "name": "sort-vars",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: sort-vars",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-space-before-blocks",
    "name": "space-before-blocks",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: space-before-blocks",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-space-before-function-paren",
    "name": "space-before-function-paren",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: space-before-function-paren",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-space-in-parens",
    "name": "space-in-parens",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: space-in-parens",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-space-infix-ops",
    "name": "space-infix-ops",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: space-infix-ops",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-space-unary-ops",
    "name": "space-unary-ops",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: space-unary-ops",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-spaced-comment",
    "name": "spaced-comment",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: spaced-comment",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-switch-colon-spacing",
    "name": "switch-colon-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: switch-colon-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-symbol-description",
    "name": "symbol-description",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: symbol-description",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-template-curly-spacing",
    "name": "template-curly-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: template-curly-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-template-tag-spacing",
    "name": "template-tag-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: template-tag-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-unicode-bom",
    "name": "unicode-bom",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: unicode-bom",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-use-isnan",
    "name": "use-isnan",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: use-isnan",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-valid-typeof",
    "name": "valid-typeof",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: valid-typeof",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-vars-on-top",
    "name": "vars-on-top",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: vars-on-top",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-wrap-iife",
    "name": "wrap-iife",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: wrap-iife",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-wrap-regex",
    "name": "wrap-regex",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: wrap-regex",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-yield-star-spacing",
    "name": "yield-star-spacing",
    "category": "ESLint Core Rules",
    "description": "ESLint core rule: yield-star-spacing",
    "source": "ESLint Official Repository"
  },
  {
    "rule_id": "eslint-unicorn-better-regex",
    "name": "better-regex",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: better-regex",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-catch-error-name",
    "name": "catch-error-name",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: catch-error-name",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-consistent-assert",
    "name": "consistent-assert",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: consistent-assert",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-consistent-date-clone",
    "name": "consistent-date-clone",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: consistent-date-clone",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-consistent-destructuring",
    "name": "consistent-destructuring",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: consistent-destructuring",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-consistent-empty-array-spread",
    "name": "consistent-empty-array-spread",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: consistent-empty-array-spread",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-consistent-existence-index-check",
    "name": "consistent-existence-index-check",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: consistent-existence-index-check",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-consistent-function-scoping",
    "name": "consistent-function-scoping",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: consistent-function-scoping",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-custom-error-definition",
    "name": "custom-error-definition",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: custom-error-definition",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-empty-brace-spaces",
    "name": "empty-brace-spaces",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: empty-brace-spaces",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-error-message",
    "name": "error-message",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: error-message",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-escape-case",
    "name": "escape-case",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: escape-case",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-expiring-todo-comments",
    "name": "expiring-todo-comments",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: expiring-todo-comments",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-explicit-length-check",
    "name": "explicit-length-check",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: explicit-length-check",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-filename-case",
    "name": "filename-case",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: filename-case",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-import-style",
    "name": "import-style",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: import-style",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-new-for-builtins",
    "name": "new-for-builtins",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: new-for-builtins",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-abusive-eslint-disable",
    "name": "no-abusive-eslint-disable",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-abusive-eslint-disable",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-accessor-recursion",
    "name": "no-accessor-recursion",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-accessor-recursion",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-anonymous-default-export",
    "name": "no-anonymous-default-export",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-anonymous-default-export",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-array-callback-reference",
    "name": "no-array-callback-reference",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-array-callback-reference",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-array-for-each",
    "name": "no-array-for-each",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-array-for-each",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-array-method-this-argument",
    "name": "no-array-method-this-argument",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-array-method-this-argument",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-array-reduce",
    "name": "no-array-reduce",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-array-reduce",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-array-reverse",
    "name": "no-array-reverse",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-array-reverse",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-array-sort",
    "name": "no-array-sort",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-array-sort",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-await-expression-member",
    "name": "no-await-expression-member",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-await-expression-member",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-await-in-promise-methods",
    "name": "no-await-in-promise-methods",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-await-in-promise-methods",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-console-spaces",
    "name": "no-console-spaces",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-console-spaces",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-document-cookie",
    "name": "no-document-cookie",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-document-cookie",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-empty-file",
    "name": "no-empty-file",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-empty-file",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-for-loop",
    "name": "no-for-loop",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-for-loop",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-hex-escape",
    "name": "no-hex-escape",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-hex-escape",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-instanceof-builtins",
    "name": "no-instanceof-builtins",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-instanceof-builtins",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-invalid-fetch-options",
    "name": "no-invalid-fetch-options",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-invalid-fetch-options",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-invalid-remove-event-listener",
    "name": "no-invalid-remove-event-listener",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-invalid-remove-event-listener",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-keyword-prefix",
    "name": "no-keyword-prefix",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-keyword-prefix",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-lonely-if",
    "name": "no-lonely-if",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-lonely-if",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-magic-array-flat-depth",
    "name": "no-magic-array-flat-depth",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-magic-array-flat-depth",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-named-default",
    "name": "no-named-default",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-named-default",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-negated-condition",
    "name": "no-negated-condition",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-negated-condition",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-negation-in-equality-check",
    "name": "no-negation-in-equality-check",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-negation-in-equality-check",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-nested-ternary",
    "name": "no-nested-ternary",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-nested-ternary",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-new-array",
    "name": "no-new-array",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-new-array",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-new-buffer",
    "name": "no-new-buffer",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-new-buffer",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-null",
    "name": "no-null",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-null",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-object-as-default-parameter",
    "name": "no-object-as-default-parameter",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-object-as-default-parameter",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-process-exit",
    "name": "no-process-exit",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-process-exit",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-single-promise-in-promise-methods",
    "name": "no-single-promise-in-promise-methods",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-single-promise-in-promise-methods",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-static-only-class",
    "name": "no-static-only-class",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-static-only-class",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-thenable",
    "name": "no-thenable",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-thenable",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-this-assignment",
    "name": "no-this-assignment",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-this-assignment",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-typeof-undefined",
    "name": "no-typeof-undefined",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-typeof-undefined",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unnecessary-array-flat-depth",
    "name": "no-unnecessary-array-flat-depth",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unnecessary-array-flat-depth",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unnecessary-array-splice-count",
    "name": "no-unnecessary-array-splice-count",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unnecessary-array-splice-count",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unnecessary-await",
    "name": "no-unnecessary-await",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unnecessary-await",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unnecessary-polyfills",
    "name": "no-unnecessary-polyfills",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unnecessary-polyfills",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unnecessary-slice-end",
    "name": "no-unnecessary-slice-end",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unnecessary-slice-end",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unreadable-array-destructuring",
    "name": "no-unreadable-array-destructuring",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unreadable-array-destructuring",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unreadable-iife",
    "name": "no-unreadable-iife",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unreadable-iife",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-unused-properties",
    "name": "no-unused-properties",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-unused-properties",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-error-capture-stack-trace",
    "name": "no-useless-error-capture-stack-trace",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-error-capture-stack-trace",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-fallback-in-spread",
    "name": "no-useless-fallback-in-spread",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-fallback-in-spread",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-length-check",
    "name": "no-useless-length-check",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-length-check",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-promise-resolve-reject",
    "name": "no-useless-promise-resolve-reject",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-promise-resolve-reject",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-spread",
    "name": "no-useless-spread",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-spread",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-switch-case",
    "name": "no-useless-switch-case",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-switch-case",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-useless-undefined",
    "name": "no-useless-undefined",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-useless-undefined",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-no-zero-fractions",
    "name": "no-zero-fractions",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: no-zero-fractions",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-number-literal-case",
    "name": "number-literal-case",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: number-literal-case",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-numeric-separators-style",
    "name": "numeric-separators-style",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: numeric-separators-style",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-add-event-listener",
    "name": "prefer-add-event-listener",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-add-event-listener",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-array-find",
    "name": "prefer-array-find",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-array-find",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-array-flat",
    "name": "prefer-array-flat",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-array-flat",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-array-flat-map",
    "name": "prefer-array-flat-map",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-array-flat-map",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-array-index-of",
    "name": "prefer-array-index-of",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-array-index-of",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-array-some",
    "name": "prefer-array-some",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-array-some",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-at",
    "name": "prefer-at",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-at",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-blob-reading-methods",
    "name": "prefer-blob-reading-methods",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-blob-reading-methods",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-class-fields",
    "name": "prefer-class-fields",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-class-fields",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-code-point",
    "name": "prefer-code-point",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-code-point",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-date-now",
    "name": "prefer-date-now",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-date-now",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-default-parameters",
    "name": "prefer-default-parameters",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-default-parameters",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-dom-node-append",
    "name": "prefer-dom-node-append",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-dom-node-append",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-dom-node-dataset",
    "name": "prefer-dom-node-dataset",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-dom-node-dataset",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-dom-node-remove",
    "name": "prefer-dom-node-remove",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-dom-node-remove",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-dom-node-text-content",
    "name": "prefer-dom-node-text-content",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-dom-node-text-content",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-event-target",
    "name": "prefer-event-target",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-event-target",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-export-from",
    "name": "prefer-export-from",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-export-from",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-global-this",
    "name": "prefer-global-this",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-global-this",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-import-meta-properties",
    "name": "prefer-import-meta-properties",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-import-meta-properties",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-includes",
    "name": "prefer-includes",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-includes",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-json-parse-buffer",
    "name": "prefer-json-parse-buffer",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-json-parse-buffer",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-keyboard-event-key",
    "name": "prefer-keyboard-event-key",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-keyboard-event-key",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-logical-operator-over-ternary",
    "name": "prefer-logical-operator-over-ternary",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-logical-operator-over-ternary",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-math-min-max",
    "name": "prefer-math-min-max",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-math-min-max",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-math-trunc",
    "name": "prefer-math-trunc",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-math-trunc",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-modern-dom-apis",
    "name": "prefer-modern-dom-apis",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-modern-dom-apis",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-modern-math-apis",
    "name": "prefer-modern-math-apis",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-modern-math-apis",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-module",
    "name": "prefer-module",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-module",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-native-coercion-functions",
    "name": "prefer-native-coercion-functions",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-native-coercion-functions",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-negative-index",
    "name": "prefer-negative-index",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-negative-index",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-node-protocol",
    "name": "prefer-node-protocol",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-node-protocol",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-number-properties",
    "name": "prefer-number-properties",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-number-properties",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-object-from-entries",
    "name": "prefer-object-from-entries",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-object-from-entries",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-optional-catch-binding",
    "name": "prefer-optional-catch-binding",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-optional-catch-binding",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-prototype-methods",
    "name": "prefer-prototype-methods",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-prototype-methods",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-query-selector",
    "name": "prefer-query-selector",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-query-selector",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-reflect-apply",
    "name": "prefer-reflect-apply",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-reflect-apply",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-regexp-test",
    "name": "prefer-regexp-test",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-regexp-test",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-set-has",
    "name": "prefer-set-has",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-set-has",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-set-size",
    "name": "prefer-set-size",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-set-size",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-single-call",
    "name": "prefer-single-call",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-single-call",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-spread",
    "name": "prefer-spread",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-spread",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-string-raw",
    "name": "prefer-string-raw",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-string-raw",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-string-replace-all",
    "name": "prefer-string-replace-all",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-string-replace-all",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-string-slice",
    "name": "prefer-string-slice",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-string-slice",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-string-starts-ends-with",
    "name": "prefer-string-starts-ends-with",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-string-starts-ends-with",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-string-trim-start-end",
    "name": "prefer-string-trim-start-end",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-string-trim-start-end",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-structured-clone",
    "name": "prefer-structured-clone",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-structured-clone",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-switch",
    "name": "prefer-switch",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-switch",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-ternary",
    "name": "prefer-ternary",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-ternary",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-top-level-await",
    "name": "prefer-top-level-await",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-top-level-await",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prefer-type-error",
    "name": "prefer-type-error",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prefer-type-error",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-prevent-abbreviations",
    "name": "prevent-abbreviations",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: prevent-abbreviations",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-relative-url-style",
    "name": "relative-url-style",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: relative-url-style",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-require-array-join-separator",
    "name": "require-array-join-separator",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: require-array-join-separator",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-require-module-specifiers",
    "name": "require-module-specifiers",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: require-module-specifiers",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-require-number-to-fixed-digits-argument",
    "name": "require-number-to-fixed-digits-argument",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: require-number-to-fixed-digits-argument",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-require-post-message-target-origin",
    "name": "require-post-message-target-origin",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: require-post-message-target-origin",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-string-content",
    "name": "string-content",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: string-content",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-switch-case-braces",
    "name": "switch-case-braces",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: switch-case-braces",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-template-indent",
    "name": "template-indent",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: template-indent",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-text-encoding-identifier-case",
    "name": "text-encoding-identifier-case",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: text-encoding-identifier-case",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "eslint-unicorn-throw-new-error",
    "name": "throw-new-error",
    "category": "ESLint Unicorn Plugin",
    "description": "ESLint Unicorn plugin rule: throw-new-error",
    "source": "ESLint Unicorn Plugin Repository"
  },
  {
    "rule_id": "pmd-AbstractClassWithoutAbstractMethod",
    "name": "AbstractClassWithoutAbstractMethod",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AbstractClassWithoutAbstractMethod in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AccessorClassGeneration",
    "name": "AccessorClassGeneration",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AccessorClassGeneration in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AccessorMethodGeneration",
    "name": "AccessorMethodGeneration",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AccessorMethodGeneration in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ArrayIsStoredDirectly",
    "name": "ArrayIsStoredDirectly",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ArrayIsStoredDirectly in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidPrintStackTrace",
    "name": "AvoidPrintStackTrace",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidPrintStackTrace in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidReassigningCatchVariables",
    "name": "AvoidReassigningCatchVariables",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidReassigningCatchVariables in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidReassigningLoopVariables",
    "name": "AvoidReassigningLoopVariables",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidReassigningLoopVariables in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidReassigningParameters",
    "name": "AvoidReassigningParameters",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidReassigningParameters in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidMessageDigestField",
    "name": "AvoidMessageDigestField",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidMessageDigestField in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidStringBufferField",
    "name": "AvoidStringBufferField",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidStringBufferField in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidUsingHardCodedIP",
    "name": "AvoidUsingHardCodedIP",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: AvoidUsingHardCodedIP in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CheckResultSet",
    "name": "CheckResultSet",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: CheckResultSet in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ConstantsInInterface",
    "name": "ConstantsInInterface",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ConstantsInInterface in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DefaultLabelNotLastInSwitch",
    "name": "DefaultLabelNotLastInSwitch",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: DefaultLabelNotLastInSwitch in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoubleBraceInitialization",
    "name": "DoubleBraceInitialization",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: DoubleBraceInitialization in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ExhaustiveSwitchHasDefault",
    "name": "ExhaustiveSwitchHasDefault",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ExhaustiveSwitchHasDefault in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ForLoopCanBeForeach",
    "name": "ForLoopCanBeForeach",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ForLoopCanBeForeach in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ForLoopVariableCount",
    "name": "ForLoopVariableCount",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ForLoopVariableCount in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-GuardLogStatement",
    "name": "GuardLogStatement",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: GuardLogStatement in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ImplicitFunctionalInterface",
    "name": "ImplicitFunctionalInterface",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ImplicitFunctionalInterface in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-JUnit4SuitesShouldUseSuiteAnnotation",
    "name": "JUnit4SuitesShouldUseSuiteAnnotation",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: JUnit4SuitesShouldUseSuiteAnnotation in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-JUnit5TestShouldBePackagePrivate",
    "name": "JUnit5TestShouldBePackagePrivate",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: JUnit5TestShouldBePackagePrivate in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-JUnitUseExpected",
    "name": "JUnitUseExpected",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: JUnitUseExpected in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LiteralsFirstInComparisons",
    "name": "LiteralsFirstInComparisons",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: LiteralsFirstInComparisons in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LooseCoupling",
    "name": "LooseCoupling",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: LooseCoupling in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MethodReturnsInternalArray",
    "name": "MethodReturnsInternalArray",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: MethodReturnsInternalArray in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MissingOverride",
    "name": "MissingOverride",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: MissingOverride in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NonExhaustiveSwitch",
    "name": "NonExhaustiveSwitch",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: NonExhaustiveSwitch in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-OneDeclarationPerLine",
    "name": "OneDeclarationPerLine",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: OneDeclarationPerLine in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-PrimitiveWrapperInstantiation",
    "name": "PrimitiveWrapperInstantiation",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: PrimitiveWrapperInstantiation in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-RelianceOnDefaultCharset",
    "name": "RelianceOnDefaultCharset",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: RelianceOnDefaultCharset in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-PreserveStackTrace",
    "name": "PreserveStackTrace",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: PreserveStackTrace in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReplaceEnumerationWithIterator",
    "name": "ReplaceEnumerationWithIterator",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ReplaceEnumerationWithIterator in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReplaceHashtableWithMap",
    "name": "ReplaceHashtableWithMap",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ReplaceHashtableWithMap in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReplaceVectorWithList",
    "name": "ReplaceVectorWithList",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: ReplaceVectorWithList in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SimplifiableTestAssertion",
    "name": "SimplifiableTestAssertion",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: SimplifiableTestAssertion in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SystemPrintln",
    "name": "SystemPrintln",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: SystemPrintln in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnitTestAssertionsShouldIncludeMessage",
    "name": "UnitTestAssertionsShouldIncludeMessage",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnitTestAssertionsShouldIncludeMessage in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnitTestContainsTooManyAsserts",
    "name": "UnitTestContainsTooManyAsserts",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnitTestContainsTooManyAsserts in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnitTestShouldIncludeAssert",
    "name": "UnitTestShouldIncludeAssert",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnitTestShouldIncludeAssert in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnitTestShouldUseAfterAnnotation",
    "name": "UnitTestShouldUseAfterAnnotation",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnitTestShouldUseAfterAnnotation in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnitTestShouldUseBeforeAnnotation",
    "name": "UnitTestShouldUseBeforeAnnotation",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnitTestShouldUseBeforeAnnotation in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnitTestShouldUseTestAnnotation",
    "name": "UnitTestShouldUseTestAnnotation",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnitTestShouldUseTestAnnotation in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryVarargsArrayCreation",
    "name": "UnnecessaryVarargsArrayCreation",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnnecessaryVarargsArrayCreation in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryWarningSuppression",
    "name": "UnnecessaryWarningSuppression",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnnecessaryWarningSuppression in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnusedAssignment",
    "name": "UnusedAssignment",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnusedAssignment in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnusedFormalParameter",
    "name": "UnusedFormalParameter",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnusedFormalParameter in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnusedLocalVariable",
    "name": "UnusedLocalVariable",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnusedLocalVariable in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnusedPrivateField",
    "name": "UnusedPrivateField",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnusedPrivateField in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnusedPrivateMethod",
    "name": "UnusedPrivateMethod",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UnusedPrivateMethod in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseCollectionIsEmpty",
    "name": "UseCollectionIsEmpty",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UseCollectionIsEmpty in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseEnumCollections",
    "name": "UseEnumCollections",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UseEnumCollections in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseStandardCharsets",
    "name": "UseStandardCharsets",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UseStandardCharsets in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseTryWithResources",
    "name": "UseTryWithResources",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UseTryWithResources in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseVarargs",
    "name": "UseVarargs",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: UseVarargs in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-WhileLoopWithLiteralBoolean",
    "name": "WhileLoopWithLiteralBoolean",
    "category": "PMD Java Bestpractices",
    "description": "PMD Java rule: WhileLoopWithLiteralBoolean in bestpractices category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ClassNamingConventions",
    "name": "ClassNamingConventions",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ClassNamingConventions in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FieldNamingConventions",
    "name": "FieldNamingConventions",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: FieldNamingConventions in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FormalParameterNamingConventions",
    "name": "FormalParameterNamingConventions",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: FormalParameterNamingConventions in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LambdaCanBeMethodReference",
    "name": "LambdaCanBeMethodReference",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LambdaCanBeMethodReference in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LinguisticNaming",
    "name": "LinguisticNaming",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LinguisticNaming in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LocalVariableNamingConventions",
    "name": "LocalVariableNamingConventions",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LocalVariableNamingConventions in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LongVariable",
    "name": "LongVariable",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LongVariable in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MethodNamingConventions",
    "name": "MethodNamingConventions",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: MethodNamingConventions in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-PackageCase",
    "name": "PackageCase",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: PackageCase in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ShortClassName",
    "name": "ShortClassName",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ShortClassName in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ShortMethodName",
    "name": "ShortMethodName",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ShortMethodName in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ShortVariable",
    "name": "ShortVariable",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ShortVariable in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-TypeParameterNamingConventions",
    "name": "TypeParameterNamingConventions",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: TypeParameterNamingConventions in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LocalHomeNamingConvention",
    "name": "LocalHomeNamingConvention",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LocalHomeNamingConvention in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LocalInterfaceSessionNamingConvention",
    "name": "LocalInterfaceSessionNamingConvention",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LocalInterfaceSessionNamingConvention in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MDBAndSessionBeanNamingConvention",
    "name": "MDBAndSessionBeanNamingConvention",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: MDBAndSessionBeanNamingConvention in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-RemoteInterfaceNamingConvention",
    "name": "RemoteInterfaceNamingConvention",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: RemoteInterfaceNamingConvention in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-RemoteSessionInterfaceNamingConvention",
    "name": "RemoteSessionInterfaceNamingConvention",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: RemoteSessionInterfaceNamingConvention in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AtLeastOneConstructor",
    "name": "AtLeastOneConstructor",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: AtLeastOneConstructor in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidDollarSigns",
    "name": "AvoidDollarSigns",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: AvoidDollarSigns in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidProtectedFieldInFinalClass",
    "name": "AvoidProtectedFieldInFinalClass",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: AvoidProtectedFieldInFinalClass in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidProtectedMethodInFinalClassNotExtending",
    "name": "AvoidProtectedMethodInFinalClassNotExtending",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: AvoidProtectedMethodInFinalClassNotExtending in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidUsingNativeCode",
    "name": "AvoidUsingNativeCode",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: AvoidUsingNativeCode in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-BooleanGetMethodName",
    "name": "BooleanGetMethodName",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: BooleanGetMethodName in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CallSuperInConstructor",
    "name": "CallSuperInConstructor",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: CallSuperInConstructor in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CommentDefaultAccessModifier",
    "name": "CommentDefaultAccessModifier",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: CommentDefaultAccessModifier in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ConfusingTernary",
    "name": "ConfusingTernary",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ConfusingTernary in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ControlStatementBraces",
    "name": "ControlStatementBraces",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ControlStatementBraces in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-EmptyMethodInAbstractClassShouldBeAbstract",
    "name": "EmptyMethodInAbstractClassShouldBeAbstract",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: EmptyMethodInAbstractClassShouldBeAbstract in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ExtendsObject",
    "name": "ExtendsObject",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ExtendsObject in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FieldDeclarationsShouldBeAtStartOfClass",
    "name": "FieldDeclarationsShouldBeAtStartOfClass",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: FieldDeclarationsShouldBeAtStartOfClass in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FinalParameterInAbstractMethod",
    "name": "FinalParameterInAbstractMethod",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: FinalParameterInAbstractMethod in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ForLoopShouldBeWhileLoop",
    "name": "ForLoopShouldBeWhileLoop",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: ForLoopShouldBeWhileLoop in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-IdenticalCatchBranches",
    "name": "IdenticalCatchBranches",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: IdenticalCatchBranches in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LocalVariableCouldBeFinal",
    "name": "LocalVariableCouldBeFinal",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: LocalVariableCouldBeFinal in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MethodArgumentCouldBeFinal",
    "name": "MethodArgumentCouldBeFinal",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: MethodArgumentCouldBeFinal in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NoPackage",
    "name": "NoPackage",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: NoPackage in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseExplicitTypes",
    "name": "UseExplicitTypes",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UseExplicitTypes in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseUnderscoresInNumericLiterals",
    "name": "UseUnderscoresInNumericLiterals",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UseUnderscoresInNumericLiterals in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-OnlyOneReturn",
    "name": "OnlyOneReturn",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: OnlyOneReturn in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-PrematureDeclaration",
    "name": "PrematureDeclaration",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: PrematureDeclaration in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-TooManyStaticImports",
    "name": "TooManyStaticImports",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: TooManyStaticImports in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryAnnotationValueElement",
    "name": "UnnecessaryAnnotationValueElement",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryAnnotationValueElement in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryBoxing",
    "name": "UnnecessaryBoxing",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryBoxing in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryCast",
    "name": "UnnecessaryCast",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryCast in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryConstructor",
    "name": "UnnecessaryConstructor",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryConstructor in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryFullyQualifiedName",
    "name": "UnnecessaryFullyQualifiedName",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryFullyQualifiedName in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryImport",
    "name": "UnnecessaryImport",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryImport in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryModifier",
    "name": "UnnecessaryModifier",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryModifier in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryReturn",
    "name": "UnnecessaryReturn",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessaryReturn in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseDiamondOperator",
    "name": "UseDiamondOperator",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UseDiamondOperator in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UselessParentheses",
    "name": "UselessParentheses",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UselessParentheses in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UselessQualifiedThis",
    "name": "UselessQualifiedThis",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UselessQualifiedThis in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-VariableCanBeInlined",
    "name": "VariableCanBeInlined",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: VariableCanBeInlined in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AbstractClassWithoutAnyMethod",
    "name": "AbstractClassWithoutAnyMethod",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AbstractClassWithoutAnyMethod in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidCatchingGenericException",
    "name": "AvoidCatchingGenericException",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidCatchingGenericException in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidDeeplyNestedIfStmts",
    "name": "AvoidDeeplyNestedIfStmts",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidDeeplyNestedIfStmts in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidRethrowingException",
    "name": "AvoidRethrowingException",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidRethrowingException in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidThrowingNewInstanceOfSameException",
    "name": "AvoidThrowingNewInstanceOfSameException",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidThrowingNewInstanceOfSameException in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidThrowingNullPointerException",
    "name": "AvoidThrowingNullPointerException",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidThrowingNullPointerException in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidThrowingRawExceptionTypes",
    "name": "AvoidThrowingRawExceptionTypes",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidThrowingRawExceptionTypes in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidUncheckedExceptionsInSignatures",
    "name": "AvoidUncheckedExceptionsInSignatures",
    "category": "PMD Java Design",
    "description": "PMD Java rule: AvoidUncheckedExceptionsInSignatures in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ClassWithOnlyPrivateConstructorsShouldBeFinal",
    "name": "ClassWithOnlyPrivateConstructorsShouldBeFinal",
    "category": "PMD Java Design",
    "description": "PMD Java rule: ClassWithOnlyPrivateConstructorsShouldBeFinal in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CognitiveComplexity",
    "name": "CognitiveComplexity",
    "category": "PMD Java Design",
    "description": "PMD Java rule: CognitiveComplexity in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CollapsibleIfStatements",
    "name": "CollapsibleIfStatements",
    "category": "PMD Java Design",
    "description": "PMD Java rule: CollapsibleIfStatements in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CouplingBetweenObjects",
    "name": "CouplingBetweenObjects",
    "category": "PMD Java Design",
    "description": "PMD Java rule: CouplingBetweenObjects in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CyclomaticComplexity",
    "name": "CyclomaticComplexity",
    "category": "PMD Java Design",
    "description": "PMD Java rule: CyclomaticComplexity in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DataClass",
    "name": "DataClass",
    "category": "PMD Java Design",
    "description": "PMD Java rule: DataClass in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotExtendJavaLangError",
    "name": "DoNotExtendJavaLangError",
    "category": "PMD Java Design",
    "description": "PMD Java rule: DoNotExtendJavaLangError in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ExceptionAsFlowControl",
    "name": "ExceptionAsFlowControl",
    "category": "PMD Java Design",
    "description": "PMD Java rule: ExceptionAsFlowControl in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ExcessiveImports",
    "name": "ExcessiveImports",
    "category": "PMD Java Design",
    "description": "PMD Java rule: ExcessiveImports in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ExcessiveParameterList",
    "name": "ExcessiveParameterList",
    "category": "PMD Java Design",
    "description": "PMD Java rule: ExcessiveParameterList in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ExcessivePublicCount",
    "name": "ExcessivePublicCount",
    "category": "PMD Java Design",
    "description": "PMD Java rule: ExcessivePublicCount in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FinalFieldCouldBeStatic",
    "name": "FinalFieldCouldBeStatic",
    "category": "PMD Java Design",
    "description": "PMD Java rule: FinalFieldCouldBeStatic in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-GodClass",
    "name": "GodClass",
    "category": "PMD Java Design",
    "description": "PMD Java rule: GodClass in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ImmutableField",
    "name": "ImmutableField",
    "category": "PMD Java Design",
    "description": "PMD Java rule: ImmutableField in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InvalidJavaBean",
    "name": "InvalidJavaBean",
    "category": "PMD Java Design",
    "description": "PMD Java rule: InvalidJavaBean in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LawOfDemeter",
    "name": "LawOfDemeter",
    "category": "PMD Java Design",
    "description": "PMD Java rule: LawOfDemeter in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LogicInversion",
    "name": "LogicInversion",
    "category": "PMD Java Design",
    "description": "PMD Java rule: LogicInversion in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LoosePackageCoupling",
    "name": "LoosePackageCoupling",
    "category": "PMD Java Design",
    "description": "PMD Java rule: LoosePackageCoupling in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MutableStaticState",
    "name": "MutableStaticState",
    "category": "PMD Java Design",
    "description": "PMD Java rule: MutableStaticState in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NcssCount",
    "name": "NcssCount",
    "category": "PMD Java Design",
    "description": "PMD Java rule: NcssCount in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NPathComplexity",
    "name": "NPathComplexity",
    "category": "PMD Java Design",
    "description": "PMD Java rule: NPathComplexity in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SignatureDeclareThrowsException",
    "name": "SignatureDeclareThrowsException",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SignatureDeclareThrowsException in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SimplifiedTernary",
    "name": "SimplifiedTernary",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SimplifiedTernary in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SimplifyBooleanExpressions",
    "name": "SimplifyBooleanExpressions",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SimplifyBooleanExpressions in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SimplifyBooleanReturns",
    "name": "SimplifyBooleanReturns",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SimplifyBooleanReturns in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SimplifyConditional",
    "name": "SimplifyConditional",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SimplifyConditional in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SingularField",
    "name": "SingularField",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SingularField in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SwitchDensity",
    "name": "SwitchDensity",
    "category": "PMD Java Design",
    "description": "PMD Java rule: SwitchDensity in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-TooManyFields",
    "name": "TooManyFields",
    "category": "PMD Java Design",
    "description": "PMD Java rule: TooManyFields in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-TooManyMethods",
    "name": "TooManyMethods",
    "category": "PMD Java Design",
    "description": "PMD Java rule: TooManyMethods in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UselessOverridingMethod",
    "name": "UselessOverridingMethod",
    "category": "PMD Java Design",
    "description": "PMD Java rule: UselessOverridingMethod in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseObjectForClearerAPI",
    "name": "UseObjectForClearerAPI",
    "category": "PMD Java Design",
    "description": "PMD Java rule: UseObjectForClearerAPI in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseUtilityClass",
    "name": "UseUtilityClass",
    "category": "PMD Java Design",
    "description": "PMD Java rule: UseUtilityClass in design category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CommentContent",
    "name": "CommentContent",
    "category": "PMD Java Documentation",
    "description": "PMD Java rule: CommentContent in documentation category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CommentRequired",
    "name": "CommentRequired",
    "category": "PMD Java Documentation",
    "description": "PMD Java rule: CommentRequired in documentation category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CommentSize",
    "name": "CommentSize",
    "category": "PMD Java Documentation",
    "description": "PMD Java rule: CommentSize in documentation category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UncommentedEmptyConstructor",
    "name": "UncommentedEmptyConstructor",
    "category": "PMD Java Documentation",
    "description": "PMD Java rule: UncommentedEmptyConstructor in documentation category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UncommentedEmptyMethodBody",
    "name": "UncommentedEmptyMethodBody",
    "category": "PMD Java Documentation",
    "description": "PMD Java rule: UncommentedEmptyMethodBody in documentation category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AssignmentInOperand",
    "name": "AssignmentInOperand",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AssignmentInOperand in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AssignmentToNonFinalStatic",
    "name": "AssignmentToNonFinalStatic",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AssignmentToNonFinalStatic in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidAccessibilityAlteration",
    "name": "AvoidAccessibilityAlteration",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidAccessibilityAlteration in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidAssertAsIdentifier",
    "name": "AvoidAssertAsIdentifier",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidAssertAsIdentifier in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidBranchingStatementAsLastInLoop",
    "name": "AvoidBranchingStatementAsLastInLoop",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidBranchingStatementAsLastInLoop in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidCallingFinalize",
    "name": "AvoidCallingFinalize",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidCallingFinalize in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidCatchingNPE",
    "name": "AvoidCatchingNPE",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidCatchingNPE in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidCatchingThrowable",
    "name": "AvoidCatchingThrowable",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidCatchingThrowable in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidDecimalLiteralsInBigDecimalConstructor",
    "name": "AvoidDecimalLiteralsInBigDecimalConstructor",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidDecimalLiteralsInBigDecimalConstructor in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidDuplicateLiterals",
    "name": "AvoidDuplicateLiterals",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidDuplicateLiterals in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidEnumAsIdentifier",
    "name": "AvoidEnumAsIdentifier",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidEnumAsIdentifier in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidFieldNameMatchingMethodName",
    "name": "AvoidFieldNameMatchingMethodName",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidFieldNameMatchingMethodName in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidFieldNameMatchingTypeName",
    "name": "AvoidFieldNameMatchingTypeName",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidFieldNameMatchingTypeName in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidInstanceofChecksInCatchClause",
    "name": "AvoidInstanceofChecksInCatchClause",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidInstanceofChecksInCatchClause in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidLiteralsInIfCondition",
    "name": "AvoidLiteralsInIfCondition",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidLiteralsInIfCondition in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidMultipleUnaryOperators",
    "name": "AvoidMultipleUnaryOperators",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidMultipleUnaryOperators in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidUsingOctalValues",
    "name": "AvoidUsingOctalValues",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: AvoidUsingOctalValues in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-BeanMembersShouldSerialize",
    "name": "BeanMembersShouldSerialize",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: BeanMembersShouldSerialize in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-BrokenNullCheck",
    "name": "BrokenNullCheck",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: BrokenNullCheck in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CallSuperFirst",
    "name": "CallSuperFirst",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CallSuperFirst in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CallSuperLast",
    "name": "CallSuperLast",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CallSuperLast in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CheckSkipResult",
    "name": "CheckSkipResult",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CheckSkipResult in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ClassCastExceptionWithToArray",
    "name": "ClassCastExceptionWithToArray",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ClassCastExceptionWithToArray in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CloneMethodMustBePublic",
    "name": "CloneMethodMustBePublic",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CloneMethodMustBePublic in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CloneMethodMustImplementCloneable",
    "name": "CloneMethodMustImplementCloneable",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CloneMethodMustImplementCloneable in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CloneMethodReturnTypeMustMatchClassName",
    "name": "CloneMethodReturnTypeMustMatchClassName",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CloneMethodReturnTypeMustMatchClassName in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CloneThrowsCloneNotSupportedException",
    "name": "CloneThrowsCloneNotSupportedException",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CloneThrowsCloneNotSupportedException in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CloseResource",
    "name": "CloseResource",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CloseResource in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ConfusingArgumentToVarargsMethod",
    "name": "ConfusingArgumentToVarargsMethod",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ConfusingArgumentToVarargsMethod in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-CompareObjectsWithEquals",
    "name": "CompareObjectsWithEquals",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: CompareObjectsWithEquals in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ComparisonWithNaN",
    "name": "ComparisonWithNaN",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ComparisonWithNaN in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ConstructorCallsOverridableMethod",
    "name": "ConstructorCallsOverridableMethod",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ConstructorCallsOverridableMethod in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DataflowAnomalyAnalysis",
    "name": "DataflowAnomalyAnalysis",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DataflowAnomalyAnalysis in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DetachedTestCase",
    "name": "DetachedTestCase",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DetachedTestCase in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotCallGarbageCollectionExplicitly",
    "name": "DoNotCallGarbageCollectionExplicitly",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DoNotCallGarbageCollectionExplicitly in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotCallSystemExit",
    "name": "DoNotCallSystemExit",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DoNotCallSystemExit in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotExtendJavaLangThrowable",
    "name": "DoNotExtendJavaLangThrowable",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DoNotExtendJavaLangThrowable in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotHardCodeSDCard",
    "name": "DoNotHardCodeSDCard",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DoNotHardCodeSDCard in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotThrowExceptionInFinally",
    "name": "DoNotThrowExceptionInFinally",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DoNotThrowExceptionInFinally in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DontImportSun",
    "name": "DontImportSun",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DontImportSun in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DontUseFloatTypeForLoopIndices",
    "name": "DontUseFloatTypeForLoopIndices",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: DontUseFloatTypeForLoopIndices in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-EqualsNull",
    "name": "EqualsNull",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: EqualsNull in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FinalizeDoesNotCallSuperFinalize",
    "name": "FinalizeDoesNotCallSuperFinalize",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: FinalizeDoesNotCallSuperFinalize in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FinalizeOnlyCallsSuperFinalize",
    "name": "FinalizeOnlyCallsSuperFinalize",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: FinalizeOnlyCallsSuperFinalize in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FinalizeOverloaded",
    "name": "FinalizeOverloaded",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: FinalizeOverloaded in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-FinalizeShouldBeProtected",
    "name": "FinalizeShouldBeProtected",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: FinalizeShouldBeProtected in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-IdempotentOperations",
    "name": "IdempotentOperations",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: IdempotentOperations in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ImplicitSwitchFallThrough",
    "name": "ImplicitSwitchFallThrough",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ImplicitSwitchFallThrough in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InstantiationToGetClass",
    "name": "InstantiationToGetClass",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: InstantiationToGetClass in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InvalidLogMessageFormat",
    "name": "InvalidLogMessageFormat",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: InvalidLogMessageFormat in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-JumbledIncrementer",
    "name": "JumbledIncrementer",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: JumbledIncrementer in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-JUnitSpelling",
    "name": "JUnitSpelling",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: JUnitSpelling in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-JUnitStaticSuite",
    "name": "JUnitStaticSuite",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: JUnitStaticSuite in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-LoggerIsNotStaticFinal",
    "name": "LoggerIsNotStaticFinal",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: LoggerIsNotStaticFinal in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MethodWithSameNameAsEnclosingClass",
    "name": "MethodWithSameNameAsEnclosingClass",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: MethodWithSameNameAsEnclosingClass in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MisplacedNullCheck",
    "name": "MisplacedNullCheck",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: MisplacedNullCheck in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MissingSerialVersionUID",
    "name": "MissingSerialVersionUID",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: MissingSerialVersionUID in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MissingStaticMethodInNonInstantiatableClass",
    "name": "MissingStaticMethodInNonInstantiatableClass",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: MissingStaticMethodInNonInstantiatableClass in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-MoreThanOneLogger",
    "name": "MoreThanOneLogger",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: MoreThanOneLogger in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NonCaseLabelInSwitch",
    "name": "NonCaseLabelInSwitch",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: NonCaseLabelInSwitch in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NonStaticInitializer",
    "name": "NonStaticInitializer",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: NonStaticInitializer in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NullAssignment",
    "name": "NullAssignment",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: NullAssignment in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-OverrideBothEqualsAndHashcode",
    "name": "OverrideBothEqualsAndHashcode",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: OverrideBothEqualsAndHashcode in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-OverrideBothEqualsAndHashCodeOnComparable",
    "name": "OverrideBothEqualsAndHashCodeOnComparable",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: OverrideBothEqualsAndHashCodeOnComparable in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ProperCloneImplementation",
    "name": "ProperCloneImplementation",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ProperCloneImplementation in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ProperLogger",
    "name": "ProperLogger",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ProperLogger in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReplaceJavaUtilCalendar",
    "name": "ReplaceJavaUtilCalendar",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ReplaceJavaUtilCalendar in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReplaceJavaUtilDate",
    "name": "ReplaceJavaUtilDate",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ReplaceJavaUtilDate in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReturnEmptyCollectionRatherThanNull",
    "name": "ReturnEmptyCollectionRatherThanNull",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ReturnEmptyCollectionRatherThanNull in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ReturnFromFinallyBlock",
    "name": "ReturnFromFinallyBlock",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: ReturnFromFinallyBlock in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SimpleDateFormatNeedsLocale",
    "name": "SimpleDateFormatNeedsLocale",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: SimpleDateFormatNeedsLocale in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SingleMethodSingleton",
    "name": "SingleMethodSingleton",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: SingleMethodSingleton in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SingletonClassReturningNewInstance",
    "name": "SingletonClassReturningNewInstance",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: SingletonClassReturningNewInstance in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-StaticEJBFieldShouldBeFinal",
    "name": "StaticEJBFieldShouldBeFinal",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: StaticEJBFieldShouldBeFinal in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-StringBufferInstantiationWithChar",
    "name": "StringBufferInstantiationWithChar",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: StringBufferInstantiationWithChar in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SuspiciousEqualsMethodName",
    "name": "SuspiciousEqualsMethodName",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: SuspiciousEqualsMethodName in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SuspiciousHashcodeMethodName",
    "name": "SuspiciousHashcodeMethodName",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: SuspiciousHashcodeMethodName in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-SuspiciousOctalEscape",
    "name": "SuspiciousOctalEscape",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: SuspiciousOctalEscape in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-TestClassWithoutTestCases",
    "name": "TestClassWithoutTestCases",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: TestClassWithoutTestCases in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnconditionalIfStatement",
    "name": "UnconditionalIfStatement",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UnconditionalIfStatement in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryBooleanAssertion",
    "name": "UnnecessaryBooleanAssertion",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UnnecessaryBooleanAssertion in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryCaseChange",
    "name": "UnnecessaryCaseChange",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UnnecessaryCaseChange in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessaryConversionTemporary",
    "name": "UnnecessaryConversionTemporary",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UnnecessaryConversionTemporary in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnusedNullCheckInEquals",
    "name": "UnusedNullCheckInEquals",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UnusedNullCheckInEquals in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseCorrectExceptionLogging",
    "name": "UseCorrectExceptionLogging",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UseCorrectExceptionLogging in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseEqualsToCompareStrings",
    "name": "UseEqualsToCompareStrings",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UseEqualsToCompareStrings in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UselessPureMethodCall",
    "name": "UselessPureMethodCall",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UselessPureMethodCall in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseLocaleWithCaseConversions",
    "name": "UseLocaleWithCaseConversions",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UseLocaleWithCaseConversions in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseProperClassLoader",
    "name": "UseProperClassLoader",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: UseProperClassLoader in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-EmptyControlStatement",
    "name": "EmptyControlStatement",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: EmptyControlStatement in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnnecessarySemicolon",
    "name": "UnnecessarySemicolon",
    "category": "PMD Java Codestyle",
    "description": "PMD Java rule: UnnecessarySemicolon in codestyle category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-EmptyCatchBlock",
    "name": "EmptyCatchBlock",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: EmptyCatchBlock in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-EmptyFinalizer",
    "name": "EmptyFinalizer",
    "category": "PMD Java Errorprone",
    "description": "PMD Java rule: EmptyFinalizer in errorprone category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidSynchronizedAtMethodLevel",
    "name": "AvoidSynchronizedAtMethodLevel",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: AvoidSynchronizedAtMethodLevel in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidSynchronizedStatement",
    "name": "AvoidSynchronizedStatement",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: AvoidSynchronizedStatement in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidThreadGroup",
    "name": "AvoidThreadGroup",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: AvoidThreadGroup in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidUsingVolatile",
    "name": "AvoidUsingVolatile",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: AvoidUsingVolatile in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoNotUseThreads",
    "name": "DoNotUseThreads",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: DoNotUseThreads in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DontCallThreadRun",
    "name": "DontCallThreadRun",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: DontCallThreadRun in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-DoubleCheckedLocking",
    "name": "DoubleCheckedLocking",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: DoubleCheckedLocking in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-NonThreadSafeSingleton",
    "name": "NonThreadSafeSingleton",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: NonThreadSafeSingleton in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UnsynchronizedStaticFormatter",
    "name": "UnsynchronizedStaticFormatter",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: UnsynchronizedStaticFormatter in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseConcurrentHashMap",
    "name": "UseConcurrentHashMap",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: UseConcurrentHashMap in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseNotifyAllInsteadOfNotify",
    "name": "UseNotifyAllInsteadOfNotify",
    "category": "PMD Java Multithreading",
    "description": "PMD Java rule: UseNotifyAllInsteadOfNotify in multithreading category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AddEmptyString",
    "name": "AddEmptyString",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: AddEmptyString in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AppendCharacterWithChar",
    "name": "AppendCharacterWithChar",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: AppendCharacterWithChar in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidArrayLoops",
    "name": "AvoidArrayLoops",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: AvoidArrayLoops in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidCalendarDateCreation",
    "name": "AvoidCalendarDateCreation",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: AvoidCalendarDateCreation in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidFileStream",
    "name": "AvoidFileStream",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: AvoidFileStream in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-AvoidInstantiatingObjectsInLoops",
    "name": "AvoidInstantiatingObjectsInLoops",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: AvoidInstantiatingObjectsInLoops in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-BigIntegerInstantiation",
    "name": "BigIntegerInstantiation",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: BigIntegerInstantiation in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ConsecutiveAppendsShouldReuse",
    "name": "ConsecutiveAppendsShouldReuse",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: ConsecutiveAppendsShouldReuse in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-ConsecutiveLiteralAppends",
    "name": "ConsecutiveLiteralAppends",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: ConsecutiveLiteralAppends in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InefficientEmptyStringCheck",
    "name": "InefficientEmptyStringCheck",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: InefficientEmptyStringCheck in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InefficientStringBuffering",
    "name": "InefficientStringBuffering",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: InefficientStringBuffering in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InsufficientStringBufferDeclaration",
    "name": "InsufficientStringBufferDeclaration",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: InsufficientStringBufferDeclaration in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-OptimizableToArrayCall",
    "name": "OptimizableToArrayCall",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: OptimizableToArrayCall in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-RedundantFieldInitializer",
    "name": "RedundantFieldInitializer",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: RedundantFieldInitializer in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-StringInstantiation",
    "name": "StringInstantiation",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: StringInstantiation in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-StringToString",
    "name": "StringToString",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: StringToString in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-TooFewBranchesForSwitch",
    "name": "TooFewBranchesForSwitch",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: TooFewBranchesForSwitch in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseArrayListInsteadOfVector",
    "name": "UseArrayListInsteadOfVector",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UseArrayListInsteadOfVector in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseArraysAsList",
    "name": "UseArraysAsList",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UseArraysAsList in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseIndexOfChar",
    "name": "UseIndexOfChar",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UseIndexOfChar in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseIOStreamsWithApacheCommonsFileItem",
    "name": "UseIOStreamsWithApacheCommonsFileItem",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UseIOStreamsWithApacheCommonsFileItem in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UselessStringValueOf",
    "name": "UselessStringValueOf",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UselessStringValueOf in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseStringBufferForStringAppends",
    "name": "UseStringBufferForStringAppends",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UseStringBufferForStringAppends in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-UseStringBufferLength",
    "name": "UseStringBufferLength",
    "category": "PMD Java Performance",
    "description": "PMD Java rule: UseStringBufferLength in performance category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-HardCodedCryptoKey",
    "name": "HardCodedCryptoKey",
    "category": "PMD Java Security",
    "description": "PMD Java rule: HardCodedCryptoKey in security category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pmd-InsecureCryptoIv",
    "name": "InsecureCryptoIv",
    "category": "PMD Java Security",
    "description": "PMD Java rule: InsecureCryptoIv in security category",
    "source": "PMD Official Repository"
  },
  {
    "rule_id": "pycodestyle-E101",
    "name": "E101",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E101",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E111",
    "name": "E111",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E111",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E112",
    "name": "E112",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E112",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E113",
    "name": "E113",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E113",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E114",
    "name": "E114",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E114",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E115",
    "name": "E115",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E115",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E116",
    "name": "E116",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E116",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E121",
    "name": "E121",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E121",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E122",
    "name": "E122",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E122",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E123",
    "name": "E123",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E123",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E124",
    "name": "E124",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E124",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E125",
    "name": "E125",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E125",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E126",
    "name": "E126",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E126",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E127",
    "name": "E127",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E127",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E128",
    "name": "E128",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E128",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E129",
    "name": "E129",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E129",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E131",
    "name": "E131",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E131",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E133",
    "name": "E133",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E133",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E201",
    "name": "E201",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E201",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E202",
    "name": "E202",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E202",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E203",
    "name": "E203",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E203",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E204",
    "name": "E204",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E204",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E211",
    "name": "E211",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E211",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E221",
    "name": "E221",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E221",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E222",
    "name": "E222",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E222",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E223",
    "name": "E223",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E223",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E224",
    "name": "E224",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E224",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E225",
    "name": "E225",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E225",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E226",
    "name": "E226",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E226",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E227",
    "name": "E227",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E227",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E228",
    "name": "E228",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E228",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E231",
    "name": "E231",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E231",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E241",
    "name": "E241",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E241",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E242",
    "name": "E242",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E242",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E251",
    "name": "E251",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E251",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E252",
    "name": "E252",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E252",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E261",
    "name": "E261",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E261",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E262",
    "name": "E262",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E262",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E265",
    "name": "E265",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E265",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E266",
    "name": "E266",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E266",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E271",
    "name": "E271",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E271",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E272",
    "name": "E272",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E272",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E273",
    "name": "E273",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E273",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E274",
    "name": "E274",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E274",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E275",
    "name": "E275",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E275",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E301",
    "name": "E301",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E301",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E302",
    "name": "E302",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E302",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E303",
    "name": "E303",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E303",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E304",
    "name": "E304",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E304",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E305",
    "name": "E305",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E305",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E306",
    "name": "E306",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E306",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E401",
    "name": "E401",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E401",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E402",
    "name": "E402",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E402",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E501",
    "name": "E501",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E501",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E502",
    "name": "E502",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E502",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E701",
    "name": "E701",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E701",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E702",
    "name": "E702",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E702",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E703",
    "name": "E703",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E703",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E704",
    "name": "E704",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E704",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E711",
    "name": "E711",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E711",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E712",
    "name": "E712",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E712",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E713",
    "name": "E713",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E713",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E714",
    "name": "E714",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E714",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E721",
    "name": "E721",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E721",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E722",
    "name": "E722",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E722",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E731",
    "name": "E731",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E731",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E741",
    "name": "E741",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E741",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E742",
    "name": "E742",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E742",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E743",
    "name": "E743",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E743",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E901",
    "name": "E901",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E901",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-E902",
    "name": "E902",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: E902",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W191",
    "name": "W191",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W191",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W291",
    "name": "W291",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W291",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W292",
    "name": "W292",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W292",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W293",
    "name": "W293",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W293",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W391",
    "name": "W391",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W391",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W503",
    "name": "W503",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W503",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W504",
    "name": "W504",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W504",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W505",
    "name": "W505",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W505",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "pycodestyle-W605",
    "name": "W605",
    "category": "Pycodestyle Python Rules",
    "description": "Pycodestyle Python rule: W605",
    "source": "Pycodestyle Official Repository"
  },
  {
    "rule_id": "no-unused-vars",
    "category": "Variables",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-undef",
    "category": "Variables",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-console",
    "category": "Possible Errors",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-debugger",
    "category": "Possible Errors",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-alert",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-eval",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-implied-eval",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-new-func",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-script-url",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "eqeqeq",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "curly",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "default-case",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-fallthrough",
    "category": "Best Practices",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-global-assign",
    "category": "Best Practices",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-implicit-globals",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-lone-blocks",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-loop-func",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-multi-spaces",
    "category": "Layout & Formatting",
    "type": "layout",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-multi-str",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-new",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-new-object",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-new-wrappers",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-octal",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-octal-escape",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-redeclare",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-return-assign",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-return-await",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-self-assign",
    "category": "Best Practices",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-self-compare",
    "category": "Best Practices",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-throw-literal",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-unused-expressions",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-unused-labels",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-useless-call",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-useless-concat",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-useless-escape",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-useless-return",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-void",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-with",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "prefer-promise-reject-errors",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "radix",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "require-await",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "vars-on-top",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "wrap-iife",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "yoda",
    "category": "Best Practices",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "strict",
    "category": "Strict Mode",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "init-declarations",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-catch-shadow",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-delete-var",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-label-var",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-restricted-globals",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-shadow",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-shadow-restricted-names",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-undef-init",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-undefined",
    "category": "Variables",
    "type": "suggestion",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "rule_id": "no-use-before-define",
    "category": "Variables",
    "type": "problem",
    "language": "javascript",
    "source": "ESLint Core Rules (Official npm package)",
    "package_version": "9.34.0",
    "npm_url": "https://registry.npmjs.org/eslint/latest"
  },
  {
    "test_id": "B101",
    "name": "assert_used",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B102",
    "name": "exec_used",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B103",
    "name": "set_bad_file_permissions",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B104",
    "name": "hardcoded_bind_all_interfaces",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B105",
    "name": "hardcoded_password_string",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B106",
    "name": "hardcoded_password_funcarg",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B107",
    "name": "hardcoded_password_default",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B108",
    "name": "hardcoded_tmp_directory",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B109",
    "name": "password_config_option_not_marked_secret",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B110",
    "name": "try_except_pass",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B111",
    "name": "execute_with_run_as_root_check",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B112",
    "name": "try_except_continue",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B113",
    "name": "request_without_timeout",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B201",
    "name": "flask_debug_true",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B301",
    "name": "pickle",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B302",
    "name": "marshal",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B303",
    "name": "md5",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B304",
    "name": "ciphers",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B305",
    "name": "ciphers",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B306",
    "name": "mktemp_q",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B307",
    "name": "eval",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B308",
    "name": "mark_safe",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B309",
    "name": "httpsconnection",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B310",
    "name": "urllib_urlopen",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B311",
    "name": "random",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B312",
    "name": "telnetlib",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B313",
    "name": "xml_bad_cElementTree",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B314",
    "name": "xml_bad_ElementTree",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B315",
    "name": "xml_bad_expatreader",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B316",
    "name": "xml_bad_expatbuilder",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B317",
    "name": "xml_bad_sax",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B318",
    "name": "xml_bad_minidom",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B319",
    "name": "xml_bad_pulldom",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B320",
    "name": "xml_bad_etree",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B321",
    "name": "ftplib",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B322",
    "name": "input",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B323",
    "name": "unverified_context",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B324",
    "name": "hashlib_new_insecure_functions",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B325",
    "name": "tempnam",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B501",
    "name": "request_with_no_cert_validation",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B502",
    "name": "ssl_with_bad_version",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B503",
    "name": "ssl_with_bad_defaults",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B504",
    "name": "ssl_with_no_version",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B505",
    "name": "weak_cryptographic_key",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B506",
    "name": "yaml_load",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B507",
    "name": "ssh_no_host_key_verification",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B601",
    "name": "paramiko_calls",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B602",
    "name": "subprocess_popen_with_shell_equals_true",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B603",
    "name": "subprocess_without_shell_equals_true",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B604",
    "name": "any_other_function_with_shell_equals_true",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B605",
    "name": "start_process_with_a_shell",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B606",
    "name": "start_process_with_no_shell",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B607",
    "name": "start_process_with_partial_path",
    "severity": "LOW",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B608",
    "name": "hardcoded_sql_expressions",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B609",
    "name": "linux_commands_wildcard_injection",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B610",
    "name": "django_extra_used",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B611",
    "name": "django_rawsql_used",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B701",
    "name": "jinja2_autoescape_false",
    "severity": "HIGH",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B702",
    "name": "use_of_mako_templates",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "test_id": "B703",
    "name": "django_mark_safe",
    "severity": "MEDIUM",
    "language": "python",
    "category": "Security",
    "source": "Bandit Security Tests (Official PyPI package)",
    "package_version": "1.8.6",
    "pypi_url": "https://pypi.org/pypi/bandit/json"
  },
  {
    "name": "ExternalAPIsUsedWithUntrustedData.ql",
    "path": "javascript/ql/src/Security/CWE-020/ExternalAPIsUsedWithUntrustedData.ql",
    "language": "javascript",
    "size": 746,
    "content": "/**\n * @name Frequency counts for external APIs that are used with untrusted data\n * @description This reports the external APIs that are used with untrusted data, along with how\n *              frequently the API is called, and how many unique sources of untrusted data flow\n *              to it.\n * @id js/count-untrusted-data-external-api\n * @kind table\n * @tags security external/cwe/cwe-020\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ExternalAPIUsedWithUntrustedDataQuery\n\nfrom ExternalApiUsedWithUntrustedData externalApi\nselect externalApi, count(externalApi.getUntrustedDataNode()) as numberOfUses,\n  externalApi.getNumberOfUntrustedSources() as numberOfUntrustedSources order by\n    numberOfUntrustedSources desc\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/ExternalAPIsUsedWithUntrustedData.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "IncompleteHostnameRegExp.ql",
    "path": "javascript/ql/src/Security/CWE-020/IncompleteHostnameRegExp.ql",
    "language": "javascript",
    "size": 582,
    "content": "/**\n * @name Incomplete regular expression for hostnames\n * @description Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/incomplete-hostname-regexp\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n */\n\nprivate import semmle.javascript.security.regexp.HostnameRegexp as HostnameRegexp\n\nquery predicate problems = HostnameRegexp::incompleteHostnameRegExp/4;\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/IncompleteHostnameRegExp.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "IncompleteUrlSchemeCheck.ql",
    "path": "javascript/ql/src/Security/CWE-020/IncompleteUrlSchemeCheck.ql",
    "language": "javascript",
    "size": 4296,
    "content": "/**\n * @name Incomplete URL scheme check\n * @description Checking for the \"javascript:\" URL scheme without also checking for \"vbscript:\"\n *              and \"data:\" suggests a logic error or even a security vulnerability.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/incomplete-url-scheme-check\n * @tags security\n *       correctness\n *       external/cwe/cwe-020\n *       external/cwe/cwe-184\n */\n\nimport javascript\nimport semmle.javascript.security.IncompleteBlacklistSanitizer as IncompleteBlacklistSanitizer\n\n/** A URL scheme that can be used to represent executable code. */\nclass DangerousScheme extends string {\n  DangerousScheme() { this = \"data:\" or this = \"javascript:\" or this = \"vbscript:\" }\n\n  /** Gets the name of this scheme without the `:`. */\n  string getWithoutColon() { this = result + \":\" }\n\n  /** Gets the name of this scheme, with or without the `:`. */\n  string getWithOrWithoutColon() { result = this or result = this.getWithoutColon() }\n}\n\n/** Returns a node that refers to the scheme of `url`. */\nDataFlow::SourceNode schemeOf(DataFlow::Node url) {\n  // url.split(\":\")[0]\n  exists(StringSplitCall split |\n    split.getSeparator() = \":\" and\n    result = split.getASubstringRead(0) and\n    url = split.getBaseString()\n  )\n  or\n  // url.getScheme(), url.getProtocol(), getScheme(url), getProtocol(url)\n  exists(DataFlow::CallNode call |\n    result = call and\n    (call.getCalleeName() = \"getScheme\" or call.getCalleeName() = \"getProtocol\")\n  |\n    call.getNumArgument() = 1 and\n    url = call.getArgument(0)\n    or\n    call.getNumArgument() = 0 and\n    url = call.getReceiver()\n  )\n  or\n  // url.scheme, url.protocol\n  exists(DataFlow::PropRead prop |\n    result = prop and\n    (prop.getPropertyName() = \"scheme\" or prop.getPropertyName() = \"protocol\") and\n    url = prop.getBase()\n  )\n}\n\n/**\n * A chain of replace calls that replaces one or more dangerous schemes.\n */\nclass SchemeReplacementChain extends IncompleteBlac",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/IncompleteUrlSchemeCheck.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "IncompleteUrlSubstringSanitization.ql",
    "path": "javascript/ql/src/Security/CWE-020/IncompleteUrlSubstringSanitization.ql",
    "language": "javascript",
    "size": 410,
    "content": "/**\n * @name Incomplete URL substring sanitization\n * @description Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/incomplete-url-substring-sanitization\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n */\n\nimport IncompleteUrlSubstringSanitization\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/IncompleteUrlSubstringSanitization.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "IncorrectSuffixCheck.ql",
    "path": "javascript/ql/src/Security/CWE-020/IncorrectSuffixCheck.ql",
    "language": "javascript",
    "size": 6513,
    "content": "/**\n * @name Incorrect suffix check\n * @description Using indexOf to implement endsWith functionality is error-prone if the -1 case is not explicitly handled.\n * @kind problem\n * @problem.severity error\n * @security-severity 7.8\n * @precision high\n * @id js/incorrect-suffix-check\n * @tags security\n *       correctness\n *       external/cwe/cwe-020\n */\n\nimport javascript\n\n/**\n * A call to `indexOf` or `lastIndexOf`.\n */\nclass IndexOfCall extends DataFlow::MethodCallNode {\n  IndexOfCall() {\n    exists(string name | name = this.getMethodName() |\n      name = \"indexOf\" or\n      name = \"lastIndexOf\"\n    ) and\n    this.getNumArgument() = 1\n  }\n\n  /** Gets the receiver or argument of this call. */\n  DataFlow::Node getAnOperand() {\n    result = this.getReceiver() or\n    result = this.getArgument(0)\n  }\n\n  /**\n   * Holds if `recv` is the local source of the receiver of this call, and `m`\n   * is the name of the invoked method.\n   */\n  private predicate receiverAndMethodName(DataFlow::Node recv, string m) {\n    this.getReceiver().getALocalSource() = recv and\n    this.getMethodName() = m\n  }\n\n  /**\n   * Gets an `indexOf` call with the same receiver, argument, and method name, including this call itself.\n   */\n  IndexOfCall getAnEquivalentIndexOfCall() {\n    result = this\n    or\n    exists(DataFlow::Node recv, string m |\n      this.receiverAndMethodName(recv, m) and result.receiverAndMethodName(recv, m)\n    |\n      // both directly reference the same value\n      result.getArgument(0).getALocalSource() = this.getArgument(0).getALocalSource()\n      or\n      // both use the same string literal\n      result.getArgument(0).getStringValue() = this.getArgument(0).getStringValue()\n      or\n      // both use the same concatenation of a string and a value\n      exists(Expr origin, StringLiteral str, AddExpr otherAdd |\n        this.getArgument(0).asExpr().(AddExpr).hasOperands(origin, str) and\n        otherAdd = result.getArgument(0).asExpr()\n      |\n        otherAdd.getAnOperand().(Strin",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/IncorrectSuffixCheck.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "MissingOriginCheck.ql",
    "path": "javascript/ql/src/Security/CWE-020/MissingOriginCheck.ql",
    "language": "javascript",
    "size": 3048,
    "content": "/**\n * @name Missing origin verification in `postMessage` handler\n * @description Missing origin verification in a `postMessage` handler allows any windows to send arbitrary data to the handler.\n * @kind problem\n * @problem.severity warning\n * @security-severity 5\n * @precision medium\n * @id js/missing-origin-check\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n *       external/cwe/cwe-940\n */\n\nimport javascript\n\n/** A function that handles \"message\" events. */\nclass PostMessageHandler extends DataFlow::FunctionNode {\n  override PostMessageEventHandler astNode;\n\n  /** Gets the parameter that contains the event. */\n  DataFlow::ParameterNode getEventParameter() {\n    result = DataFlow::parameterNode(astNode.getEventParameter())\n  }\n}\n\n/** Gets a reference to the event from a postmessage `handler` */\nDataFlow::SourceNode event(DataFlow::TypeTracker t, PostMessageHandler handler) {\n  t.start() and\n  result = handler.getEventParameter()\n  or\n  exists(DataFlow::TypeTracker t2 | result = event(t2, handler).track(t2, t))\n}\n\n/** Gets a reference to the .origin from a postmessage event. */\nDataFlow::SourceNode origin(DataFlow::TypeTracker t, PostMessageHandler handler) {\n  t.start() and\n  result = event(DataFlow::TypeTracker::end(), handler).getAPropertyRead(\"origin\")\n  or\n  result =\n    origin(t.continue(), handler)\n        .getAMethodCall([\n            \"toString\", \"toLowerCase\", \"toUpperCase\", \"toLocaleLowerCase\", \"toLocaleUpperCase\"\n          ])\n  or\n  exists(DataFlow::TypeTracker t2 | result = origin(t2, handler).track(t2, t))\n}\n\n/** Gets a reference to the .source from a postmessage event. */\nDataFlow::SourceNode source(DataFlow::TypeTracker t, PostMessageHandler handler) {\n  t.start() and\n  result = event(DataFlow::TypeTracker::end(), handler).getAPropertyRead(\"source\")\n  or\n  exists(DataFlow::TypeTracker t2 | result = source(t2, handler).track(t2, t))\n}\n\n/** Gets a reference to the origin or the source of a postmessage event. */\nDataFlow::SourceN",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/MissingOriginCheck.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "MissingRegExpAnchor.ql",
    "path": "javascript/ql/src/Security/CWE-020/MissingRegExpAnchor.ql",
    "language": "javascript",
    "size": 1729,
    "content": "/**\n * @name Missing regular expression anchor\n * @description Regular expressions without anchors can be vulnerable to bypassing.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision medium\n * @id js/regex/missing-regexp-anchor\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n */\n\nprivate import javascript\nprivate import semmle.javascript.security.regexp.HostnameRegexp as HostnameRegexp\nprivate import codeql.regex.MissingRegExpAnchor as MissingRegExpAnchor\nprivate import semmle.javascript.security.regexp.RegExpTreeView::RegExpTreeView as TreeImpl\n\nprivate module Impl implements\n  MissingRegExpAnchor::MissingRegExpAnchorSig<TreeImpl, HostnameRegexp::Impl>\n{\n  predicate isUsedAsReplace(RegExpPatternSource pattern) {\n    // is used for capture or replace\n    exists(DataFlow::MethodCallNode mcn, string name | name = mcn.getMethodName() |\n      name = \"exec\" and\n      mcn = pattern.getARegExpObject().getAMethodCall() and\n      exists(mcn.getAPropertyRead())\n      or\n      exists(DataFlow::Node arg |\n        arg = mcn.getArgument(0) and\n        (\n          pattern.getARegExpObject().flowsTo(arg) or\n          pattern.getAParse() = arg\n        )\n      |\n        name = \"replace\"\n        or\n        name = [\"match\", \"matchAll\"] and exists(mcn.getAPropertyRead())\n      )\n    )\n  }\n\n  string getEndAnchorText() { result = \"$\" }\n}\n\nimport MissingRegExpAnchor::Make<TreeImpl, HostnameRegexp::Impl, Impl>\n\nfrom DataFlow::Node nd, string msg\nwhere\n  isUnanchoredHostnameRegExp(nd, msg)\n  or\n  isSemiAnchoredHostnameRegExp(nd, msg)\n  or\n  hasMisleadingAnchorPrecedence(nd, msg)\n// isLineAnchoredHostnameRegExp is not used here, as it is not relevant to JS.\nselect nd, msg\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/MissingRegExpAnchor.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "OverlyLargeRange.ql",
    "path": "javascript/ql/src/Security/CWE-020/OverlyLargeRange.ql",
    "language": "javascript",
    "size": 736,
    "content": "/**\n * @name Overly permissive regular expression range\n * @description Overly permissive regular expression ranges match a wider range of characters than intended.\n *              This may allow an attacker to bypass a filter or sanitizer.\n * @kind problem\n * @problem.severity warning\n * @security-severity 5.0\n * @precision high\n * @id js/overly-large-range\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n */\n\nprivate import semmle.javascript.security.regexp.RegExpTreeView::RegExpTreeView as TreeView\nimport codeql.regex.OverlyLargeRangeQuery::Make<TreeView>\n\nfrom TreeView::RegExpCharacterRange range, string reason\nwhere problem(range, reason)\nselect range, \"Suspicious character range that \" + reason + \".\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/OverlyLargeRange.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "UntrustedDataToExternalAPI.ql",
    "path": "javascript/ql/src/Security/CWE-020/UntrustedDataToExternalAPI.ql",
    "language": "javascript",
    "size": 829,
    "content": "/**\n * @name Untrusted data passed to external API\n * @description Data provided remotely is used in this external API without sanitization, which could be a security risk.\n * @id js/untrusted-data-to-external-api\n * @kind path-problem\n * @precision low\n * @problem.severity error\n * @security-severity 7.8\n * @tags security external/cwe/cwe-020\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ExternalAPIUsedWithUntrustedDataQuery\nimport ExternalAPIUsedWithUntrustedDataFlow::PathGraph\n\nfrom\n  ExternalAPIUsedWithUntrustedDataFlow::PathNode source,\n  ExternalAPIUsedWithUntrustedDataFlow::PathNode sink\nwhere ExternalAPIUsedWithUntrustedDataFlow::flowPath(source, sink)\nselect sink, source, sink,\n  \"Call to \" + sink.getNode().(Sink).getApiName() + \" with untrusted data from $@.\", source,\n  source.toString()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/UntrustedDataToExternalAPI.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "UselessRegExpCharacterEscape.ql",
    "path": "javascript/ql/src/Security/CWE-020/UselessRegExpCharacterEscape.ql",
    "language": "javascript",
    "size": 5045,
    "content": "/**\n * @name Useless regular-expression character escape\n * @description Prepending a backslash to an ordinary character in a string\n *              does not have any effect, and may make regular expressions constructed from this string\n *              behave unexpectedly.\n * @kind problem\n * @problem.severity error\n * @security-severity 7.8\n * @precision high\n * @id js/useless-regexp-character-escape\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n */\n\nimport javascript\nimport semmle.javascript.CharacterEscapes::CharacterEscapes\n\nnewtype TRegExpPatternMistake =\n  /**\n   * A character escape mistake in regular expression string `src`\n   * for the character `char` at `index` in `rawStringNode`, explained\n   * by `mistake`.\n   */\n  TIdentityEscapeInStringMistake(\n    RegExpPatternSource src, string char, string mistake, AstNode rawStringNode, int index\n  ) {\n    char = getALikelyRegExpPatternMistake(src, mistake, rawStringNode, index)\n  } or\n  /**\n   * A backslash-escaped 'b' at `index` of `rawStringNode` in the\n   * regular expression string `src`, indicating intent to use the\n   * word-boundary assertion '\\b'.\n   */\n  TBackspaceInStringMistake(RegExpPatternSource src, AstNode rawStringNode, int index) {\n    exists(string raw, string cooked |\n      exists(StringLiteral lit | lit = rawStringNode |\n        rawStringNode = src.asExpr() and\n        raw = lit.getRawValue() and\n        cooked = lit.getStringValue()\n      )\n      or\n      exists(TemplateElement elem | elem = rawStringNode |\n        rawStringNode = src.asExpr().(TemplateLiteral).getAnElement() and\n        raw = elem.getRawValue() and\n        cooked = elem.getStringValue()\n      )\n    |\n      \"b\" = getAnEscapedCharacter(raw, index) and\n      // except if the string is exactly \\b\n      cooked.length() != 1\n    )\n  }\n\n/**\n * A character escape mistake in a regular expression string.\n *\n * Implementation note: the main purpose of this class is to associate an\n * exact character location with",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-020/UselessRegExpCharacterEscape.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-020"
  },
  {
    "name": "TaintedPath.ql",
    "path": "javascript/ql/src/Security/CWE-022/TaintedPath.ql",
    "language": "javascript",
    "size": 880,
    "content": "/**\n * @name Uncontrolled data used in path expression\n * @description Accessing paths influenced by users can allow an attacker to access\n *              unexpected resources.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision high\n * @id js/path-injection\n * @tags security\n *       external/cwe/cwe-022\n *       external/cwe/cwe-023\n *       external/cwe/cwe-036\n *       external/cwe/cwe-073\n *       external/cwe/cwe-099\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.TaintedPathQuery\nimport DataFlow::DeduplicatePathGraph<TaintedPathFlow::PathNode, TaintedPathFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere TaintedPathFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink, \"This path depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-022/TaintedPath.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-022"
  },
  {
    "name": "ZipSlip.ql",
    "path": "javascript/ql/src/Security/CWE-022/ZipSlip.ql",
    "language": "javascript",
    "size": 949,
    "content": "/**\n * @name Arbitrary file access during archive extraction (\"Zip Slip\")\n * @description Extracting files from a malicious ZIP file, or similar type of archive, without\n *              validating that the destination file path is within the destination directory\n *              can allow an attacker to unexpectedly gain access to resources.\n * @kind path-problem\n * @id js/zipslip\n * @problem.severity error\n * @security-severity 7.5\n * @precision high\n * @tags security\n *       external/cwe/cwe-022\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ZipSlipQuery\nimport DataFlow::DeduplicatePathGraph<ZipSlipFlow::PathNode, ZipSlipFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere ZipSlipFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode())\nselect source.getNode(), source, sink,\n  \"Unsanitized archive entry, which may contain '..', is used in a $@.\", sink.getNode(),\n  \"file system operation\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-022/ZipSlip.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-022"
  },
  {
    "name": "TemplateObjectInjection.ql",
    "path": "javascript/ql/src/Security/CWE-073/TemplateObjectInjection.ql",
    "language": "javascript",
    "size": 861,
    "content": "/**\n * @name Template Object Injection\n * @description Instantiating a template using a user-controlled object is vulnerable to local file read and potential remote code execution.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 9.3\n * @precision high\n * @id js/template-object-injection\n * @tags security\n *       external/cwe/cwe-073\n *       external/cwe/cwe-094\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.TemplateObjectInjectionQuery\nimport DataFlow::DeduplicatePathGraph<TemplateObjectInjectionFlow::PathNode, TemplateObjectInjectionFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere\n  TemplateObjectInjectionFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink, \"Template object depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-073/TemplateObjectInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-073"
  },
  {
    "name": "CommandInjection.ql",
    "path": "javascript/ql/src/Security/CWE-078/CommandInjection.ql",
    "language": "javascript",
    "size": 1024,
    "content": "/**\n * @name Uncontrolled command line\n * @description Using externally controlled strings in a command line may allow a malicious\n *              user to change the meaning of the command.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 9.8\n * @precision high\n * @id js/command-line-injection\n * @tags correctness\n *       security\n *       external/cwe/cwe-078\n *       external/cwe/cwe-088\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.CommandInjectionQuery\nimport CommandInjectionFlow::PathGraph\n\nfrom\n  CommandInjectionFlow::PathNode source, CommandInjectionFlow::PathNode sink,\n  DataFlow::Node highlight, Source sourceNode\nwhere\n  CommandInjectionFlow::flowPath(source, sink) and\n  (\n    if isSinkWithHighlight(sink.getNode(), _)\n    then isSinkWithHighlight(sink.getNode(), highlight)\n    else highlight = sink.getNode()\n  ) and\n  sourceNode = source.getNode()\nselect highlight, source, sink, \"This command line depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-078/CommandInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-078"
  },
  {
    "name": "IndirectCommandInjection.ql",
    "path": "javascript/ql/src/Security/CWE-078/IndirectCommandInjection.ql",
    "language": "javascript",
    "size": 1143,
    "content": "/**\n * @name Indirect uncontrolled command line\n * @description Forwarding command-line arguments to a child process\n *              executed within a shell may indirectly introduce\n *              command-line injection vulnerabilities.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.3\n * @precision medium\n * @id js/indirect-command-line-injection\n * @tags correctness\n *       security\n *       external/cwe/cwe-078\n *       external/cwe/cwe-088\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.IndirectCommandInjectionQuery\nimport IndirectCommandInjectionFlow::PathGraph\n\nfrom\n  IndirectCommandInjectionFlow::PathNode source, IndirectCommandInjectionFlow::PathNode sink,\n  DataFlow::Node highlight\nwhere\n  IndirectCommandInjectionFlow::flowPath(source, sink) and\n  if IndirectCommandInjectionConfig::isSinkWithHighlight(sink.getNode(), _)\n  then IndirectCommandInjectionConfig::isSinkWithHighlight(sink.getNode(), highlight)\n  else highlight = sink.getNode()\nselect highlight, source, sink, \"This command depends on an unsanitized $@.\", source.getNode(),\n  source.getNode().(Source).describe()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-078/IndirectCommandInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-078"
  },
  {
    "name": "SecondOrderCommandInjection.ql",
    "path": "javascript/ql/src/Security/CWE-078/SecondOrderCommandInjection.ql",
    "language": "javascript",
    "size": 1133,
    "content": "/**\n * @name Second order command injection\n * @description Using user-controlled data as arguments to some commands, such as git clone,\n *              can allow arbitrary commands to be executed.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.0\n * @precision high\n * @id js/second-order-command-line-injection\n * @tags correctness\n *       security\n *       external/cwe/cwe-078\n *       external/cwe/cwe-088\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.SecondOrderCommandInjectionQuery\nimport DataFlow::DeduplicatePathGraph<SecondOrderCommandInjectionFlow::PathNode, SecondOrderCommandInjectionFlow::PathGraph>\n\nfrom PathNode source, PathNode sink, Sink sinkNode\nwhere\n  SecondOrderCommandInjectionFlow::flowPath(source.getAnOriginalPathNode(),\n    sink.getAnOriginalPathNode()) and\n  sinkNode = sink.getNode()\nselect sink.getNode(), source, sink,\n  \"Command line argument that depends on $@ can execute an arbitrary command if \" +\n    sinkNode.getVulnerableArgumentExample() + \" is used with \" + sinkNode.getCommand() + \".\",\n  source.getNode(), source.getNode().(Source).describe()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-078/SecondOrderCommandInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-078"
  },
  {
    "name": "ShellCommandInjectionFromEnvironment.ql",
    "path": "javascript/ql/src/Security/CWE-078/ShellCommandInjectionFromEnvironment.ql",
    "language": "javascript",
    "size": 1250,
    "content": "/**\n * @name Shell command built from environment values\n * @description Building a shell command string with values from the enclosing\n *              environment may cause subtle bugs or vulnerabilities.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.3\n * @precision high\n * @id js/shell-command-injection-from-environment\n * @tags correctness\n *       security\n *       external/cwe/cwe-078\n *       external/cwe/cwe-088\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ShellCommandInjectionFromEnvironmentQuery\nimport ShellCommandInjectionFromEnvironmentFlow::PathGraph\n\nfrom\n  ShellCommandInjectionFromEnvironmentFlow::PathNode source,\n  ShellCommandInjectionFromEnvironmentFlow::PathNode sink, DataFlow::Node highlight,\n  Source sourceNode\nwhere\n  sourceNode = source.getNode() and\n  ShellCommandInjectionFromEnvironmentFlow::flowPath(source, sink) and\n  if ShellCommandInjectionFromEnvironmentConfig::isSinkWithHighlight(sink.getNode(), _)\n  then ShellCommandInjectionFromEnvironmentConfig::isSinkWithHighlight(sink.getNode(), highlight)\n  else highlight = sink.getNode()\nselect highlight, source, sink, \"This shell command depends on an uncontrolled $@.\", sourceNode,\n  sourceNode.getSourceType()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-078/ShellCommandInjectionFromEnvironment.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-078"
  },
  {
    "name": "UnsafeShellCommandConstruction.ql",
    "path": "javascript/ql/src/Security/CWE-078/UnsafeShellCommandConstruction.ql",
    "language": "javascript",
    "size": 1053,
    "content": "/**\n * @name Unsafe shell command constructed from library input\n * @description Using externally controlled strings in a command line may allow a malicious\n *              user to change the meaning of the command.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 6.3\n * @precision high\n * @id js/shell-command-constructed-from-input\n * @tags correctness\n *       security\n *       external/cwe/cwe-078\n *       external/cwe/cwe-088\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.UnsafeShellCommandConstructionQuery\nimport UnsafeShellCommandConstructionFlow::PathGraph\n\nfrom\n  UnsafeShellCommandConstructionFlow::PathNode source,\n  UnsafeShellCommandConstructionFlow::PathNode sink, Sink sinkNode\nwhere UnsafeShellCommandConstructionFlow::flowPath(source, sink) and sinkNode = sink.getNode()\nselect sinkNode.getAlertLocation(), source, sink,\n  \"This \" + sinkNode.getSinkType() + \" which depends on $@ is later used in a $@.\",\n  source.getNode(), \"library input\", sinkNode.getCommandExecution(), \"shell command\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-078/UnsafeShellCommandConstruction.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-078"
  },
  {
    "name": "UselessUseOfCat.ql",
    "path": "javascript/ql/src/Security/CWE-078/UselessUseOfCat.ql",
    "language": "javascript",
    "size": 983,
    "content": "/**\n * @name Unnecessary use of `cat` process\n * @description Using the  `cat` process to read a file is unnecessarily complex, inefficient, unportable, and can lead to subtle bugs, or even security vulnerabilities.\n * @kind problem\n * @problem.severity error\n * @security-severity 6.3\n * @precision high\n * @id js/unnecessary-use-of-cat\n * @tags correctness\n *       security\n *       maintainability\n *       external/cwe/cwe-078\n */\n\nimport javascript\nimport semmle.javascript.security.UselessUseOfCat\nimport semmle.javascript.RestrictedLocations\n\nfrom UselessCat cat, string message\nwhere\n  message = \" Can be replaced with: \" + PrettyPrintCatCall::createReadFileCall(cat)\n  or\n  not exists(PrettyPrintCatCall::createReadFileCall(cat)) and\n  if cat.isSync()\n  then message = \" Can be replaced with a call to fs.readFileSync(..).\"\n  else message = \" Can be replaced with a call to fs.readFile(..).\"\nselect cat.asExpr().(FirstLineOf), \"Unnecessary use of `cat` process.\" + message\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-078/UselessUseOfCat.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-078"
  },
  {
    "name": "ExceptionXss.ql",
    "path": "javascript/ql/src/Security/CWE-079/ExceptionXss.ql",
    "language": "javascript",
    "size": 862,
    "content": "/**\n * @name Exception text reinterpreted as HTML\n * @description Reinterpreting text from an exception as HTML\n *              can lead to a cross-site scripting vulnerability.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.1\n * @precision high\n * @id js/xss-through-exception\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ExceptionXssQuery\nimport DataFlow::DeduplicatePathGraph<ExceptionXssFlow::PathNode, ExceptionXssFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere ExceptionXssFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink,\n  \"$@ is reinterpreted as HTML without escaping meta-characters.\", source.getNode(),\n  source.getNode().(Source).getDescription()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/ExceptionXss.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "ReflectedXss.ql",
    "path": "javascript/ql/src/Security/CWE-079/ReflectedXss.ql",
    "language": "javascript",
    "size": 738,
    "content": "/**\n * @name Reflected cross-site scripting\n * @description Writing user input directly to an HTTP response allows for\n *              a cross-site scripting vulnerability.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.8\n * @precision high\n * @id js/reflected-xss\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ReflectedXssQuery\nimport ReflectedXssFlow::PathGraph\n\nfrom ReflectedXssFlow::PathNode source, ReflectedXssFlow::PathNode sink\nwhere ReflectedXssFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Cross-site scripting vulnerability due to a $@.\",\n  source.getNode(), \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/ReflectedXss.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "StoredXss.ql",
    "path": "javascript/ql/src/Security/CWE-079/StoredXss.ql",
    "language": "javascript",
    "size": 715,
    "content": "/**\n * @name Stored cross-site scripting\n * @description Using uncontrolled stored values in HTML allows for\n *              a stored cross-site scripting vulnerability.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.8\n * @precision high\n * @id js/stored-xss\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.StoredXssQuery\nimport StoredXssFlow::PathGraph\n\nfrom StoredXssFlow::PathNode source, StoredXssFlow::PathNode sink\nwhere StoredXssFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Stored cross-site scripting vulnerability due to $@.\",\n  source.getNode(), \"stored value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/StoredXss.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "UnsafeHtmlConstruction.ql",
    "path": "javascript/ql/src/Security/CWE-079/UnsafeHtmlConstruction.ql",
    "language": "javascript",
    "size": 1037,
    "content": "/**\n * @name Unsafe HTML constructed from library input\n * @description Using externally controlled strings to construct HTML might allow a malicious\n *              user to perform a cross-site scripting attack.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 6.1\n * @precision high\n * @id js/html-constructed-from-input\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.UnsafeHtmlConstructionQuery\nimport DataFlow::DeduplicatePathGraph<UnsafeHtmlConstructionFlow::PathNode, UnsafeHtmlConstructionFlow::PathGraph>\n\nfrom PathNode source, PathNode sink, Sink sinkNode\nwhere\n  UnsafeHtmlConstructionFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode()) and\n  sink.getNode() = sinkNode\nselect sinkNode, source, sink,\n  \"This \" + sinkNode.describe() + \" which depends on $@ might later allow $@.\", source.getNode(),\n  \"library input\", sinkNode.getSink(), sinkNode.getVulnerabilityKind().toLowerCase()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/UnsafeHtmlConstruction.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "UnsafeJQueryPlugin.ql",
    "path": "javascript/ql/src/Security/CWE-079/UnsafeJQueryPlugin.ql",
    "language": "javascript",
    "size": 893,
    "content": "/**\n * @name Unsafe jQuery plugin\n * @description A jQuery plugin that unintentionally constructs HTML from some of its options may be unsafe to use for clients.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.1\n * @precision high\n * @id js/unsafe-jquery-plugin\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n *       frameworks/jquery\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.UnsafeJQueryPluginQuery\nimport UnsafeJQueryPluginFlow::PathGraph\n\nfrom\n  UnsafeJQueryPluginFlow::PathNode source, UnsafeJQueryPluginFlow::PathNode sink,\n  JQuery::JQueryPluginMethod plugin\nwhere\n  UnsafeJQueryPluginFlow::flowPath(source, sink) and\n  source.getNode().(Source).getPlugin() = plugin\nselect sink.getNode(), source, sink, \"Potential XSS vulnerability in the $@.\", plugin,\n  \"'$.fn.\" + plugin.getPluginName() + \"' plugin\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/UnsafeJQueryPlugin.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "Xss.ql",
    "path": "javascript/ql/src/Security/CWE-079/Xss.ql",
    "language": "javascript",
    "size": 816,
    "content": "/**\n * @name Client-side cross-site scripting\n * @description Writing user input directly to the DOM allows for\n *              a cross-site scripting vulnerability.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.8\n * @precision high\n * @id js/xss\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.DomBasedXssQuery\nimport DataFlow::DeduplicatePathGraph<DomBasedXssFlow::PathNode, DomBasedXssFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere DomBasedXssFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink,\n  sink.getNode().(Sink).getVulnerabilityKind() + \" vulnerability due to $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/Xss.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "XssThroughDom.ql",
    "path": "javascript/ql/src/Security/CWE-079/XssThroughDom.ql",
    "language": "javascript",
    "size": 814,
    "content": "/**\n * @name DOM text reinterpreted as HTML\n * @description Reinterpreting text from the DOM as HTML\n *              can lead to a cross-site scripting vulnerability.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.1\n * @precision high\n * @id js/xss-through-dom\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.XssThroughDomQuery\nimport XssThroughDomFlow::PathGraph\n\nfrom XssThroughDomFlow::PathNode source, XssThroughDomFlow::PathNode sink\nwhere\n  XssThroughDomFlow::flowPath(source, sink) and\n  not isIgnoredSourceSinkPair(source.getNode(), sink.getNode())\nselect sink.getNode(), source, sink,\n  \"$@ is reinterpreted as HTML without escaping meta-characters.\", source.getNode(), \"DOM text\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-079/XssThroughDom.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-079"
  },
  {
    "name": "SqlInjection.ql",
    "path": "javascript/ql/src/Security/CWE-089/SqlInjection.ql",
    "language": "javascript",
    "size": 1352,
    "content": "/**\n * @name Database query built from user-controlled sources\n * @description Building a database query from user-controlled sources is vulnerable to insertion of\n *              malicious code by the user.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 8.8\n * @precision high\n * @id js/sql-injection\n * @tags security\n *       external/cwe/cwe-089\n *       external/cwe/cwe-090\n *       external/cwe/cwe-943\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.SqlInjectionQuery as Sql\nimport semmle.javascript.security.dataflow.NosqlInjectionQuery as Nosql\n\nmodule Merged =\n  DataFlow::MergePathGraph<Sql::SqlInjectionFlow::PathNode, Nosql::NosqlInjectionFlow::PathNode,\n    Sql::SqlInjectionFlow::PathGraph, Nosql::NosqlInjectionFlow::PathGraph>;\n\nimport DataFlow::DeduplicatePathGraph<Merged::PathNode, Merged::PathGraph>\n\nfrom PathNode source, PathNode sink, string type\nwhere\n  Sql::SqlInjectionFlow::flowPath(source.getAnOriginalPathNode().asPathNode1(),\n    sink.getAnOriginalPathNode().asPathNode1()) and\n  type = \"string\"\n  or\n  Nosql::NosqlInjectionFlow::flowPath(source.getAnOriginalPathNode().asPathNode2(),\n    sink.getAnOriginalPathNode().asPathNode2()) and\n  type = \"object\"\nselect sink.getNode(), source, sink, \"This query \" + type + \" depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-089/SqlInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-089"
  },
  {
    "name": "CodeInjection.ql",
    "path": "javascript/ql/src/Security/CWE-094/CodeInjection.ql",
    "language": "javascript",
    "size": 798,
    "content": "/**\n * @name Code injection\n * @description Interpreting unsanitized user input as code allows a malicious user arbitrary\n *              code execution.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 9.3\n * @precision high\n * @id js/code-injection\n * @tags security\n *       external/cwe/cwe-094\n *       external/cwe/cwe-095\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.CodeInjectionQuery\nimport CodeInjectionFlow::PathGraph\n\nfrom CodeInjectionFlow::PathNode source, CodeInjectionFlow::PathNode sink\nwhere CodeInjectionFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, sink.getNode().(Sink).getMessagePrefix() + \" depends on a $@.\",\n  source.getNode(), \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-094/CodeInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-094"
  },
  {
    "name": "ImproperCodeSanitization.ql",
    "path": "javascript/ql/src/Security/CWE-094/ImproperCodeSanitization.ql",
    "language": "javascript",
    "size": 2501,
    "content": "/**\n * @name Improper code sanitization\n * @description Escaping code as HTML does not provide protection against code injection.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 6.1\n * @precision high\n * @id js/bad-code-sanitization\n * @tags security\n *       external/cwe/cwe-094\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ImproperCodeSanitizationQuery\nprivate import semmle.javascript.heuristics.HeuristicSinks\nprivate import semmle.javascript.security.dataflow.CodeInjectionCustomizations\nimport ImproperCodeSanitizationFlow::PathGraph\n\n/**\n * Gets a type-tracked instance of `RemoteFlowSource` using type-tracker `t`.\n */\nprivate DataFlow::Node remoteFlow(DataFlow::TypeTracker t) {\n  t.start() and\n  result instanceof RemoteFlowSource\n  or\n  exists(DataFlow::TypeTracker t2, DataFlow::Node prev | prev = remoteFlow(t2) |\n    t2 = t.smallstep(prev, result)\n    or\n    TaintTracking::sharedTaintStep(prev, result) and\n    t = t2\n  )\n}\n\n/**\n * Gets a type-tracked reference to a `RemoteFlowSource`.\n */\nprivate DataFlow::Node remoteFlow() { result = remoteFlow(DataFlow::TypeTracker::end()) }\n\n/**\n * Gets a type-back-tracked instance of a code injection sink using type-tracker `t`.\n */\nprivate DataFlow::Node endsInCodeInjectionSink(DataFlow::TypeBackTracker t) {\n  t.start() and\n  (\n    result instanceof CodeInjection::Sink\n    or\n    result instanceof HeuristicCodeInjectionSink and\n    not result instanceof StringOps::ConcatenationRoot // the heuristic CodeInjection sink looks for string-concats, we are not interrested in those here.\n  )\n  or\n  exists(DataFlow::TypeBackTracker t2 | t2 = t.smallstep(result, endsInCodeInjectionSink(t2)))\n}\n\n/**\n * Gets a reference to to a data-flow node that ends in a code injection sink.\n */\nprivate DataFlow::Node endsInCodeInjectionSink() {\n  result = endsInCodeInjectionSink(DataFlow::TypeBackTracker::end())\n}\n\nfrom ImproperCodeSanitizationFlo",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-094/ImproperCodeSanitization.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-094"
  },
  {
    "name": "UnsafeCodeConstruction.ql",
    "path": "javascript/ql/src/Security/CWE-094/UnsafeCodeConstruction.ql",
    "language": "javascript",
    "size": 988,
    "content": "/**\n * @name Unsafe code constructed from library input\n * @description Using externally controlled strings to construct code may allow a malicious\n *              user to execute arbitrary code.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.1\n * @precision medium\n * @id js/unsafe-code-construction\n * @tags security\n *       external/cwe/cwe-094\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.UnsafeCodeConstruction::UnsafeCodeConstruction\nimport UnsafeCodeConstructionFlow::PathGraph\n\nfrom\n  UnsafeCodeConstructionFlow::PathNode source, UnsafeCodeConstructionFlow::PathNode sink,\n  Sink sinkNode\nwhere UnsafeCodeConstructionFlow::flowPath(source, sink) and sinkNode = sink.getNode()\nselect sink.getNode(), source, sink,\n  \"This \" + sinkNode.getSinkType() + \" which depends on $@ is later $@.\", source.getNode(),\n  \"library input\", sinkNode.getCodeSink(), \"interpreted as code\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-094/UnsafeCodeConstruction.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-094"
  },
  {
    "name": "UnsafeDynamicMethodAccess.ql",
    "path": "javascript/ql/src/Security/CWE-094/UnsafeDynamicMethodAccess.ql",
    "language": "javascript",
    "size": 780,
    "content": "/**\n * @name Unsafe dynamic method access\n * @description Invoking user-controlled methods on certain objects can lead to remote code execution.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 9.3\n * @precision high\n * @id js/unsafe-dynamic-method-access\n * @tags security\n *       external/cwe/cwe-094\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.UnsafeDynamicMethodAccessQuery\nimport UnsafeDynamicMethodAccessFlow::PathGraph\n\nfrom UnsafeDynamicMethodAccessFlow::PathNode source, UnsafeDynamicMethodAccessFlow::PathNode sink\nwhere UnsafeDynamicMethodAccessFlow::flowPath(source, sink)\nselect sink, source, sink,\n  \"This method is invoked using a $@, which may allow remote code execution.\", source.getNode(),\n  \"user-controlled value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-094/UnsafeDynamicMethodAccess.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-094"
  },
  {
    "name": "ClientExposedCookie.ql",
    "path": "javascript/ql/src/Security/CWE-1004/ClientExposedCookie.ql",
    "language": "javascript",
    "size": 560,
    "content": "/**\n * @name Sensitive server cookie exposed to the client\n * @description Sensitive cookies set by a server can be read by the client if the `httpOnly` flag is not set.\n * @kind problem\n * @problem.severity warning\n * @security-severity 5.0\n * @precision high\n * @id js/client-exposed-cookie\n * @tags security\n *       external/cwe/cwe-1004\n */\n\nimport javascript\n\nfrom CookieWrites::CookieWrite cookie\nwhere\n  cookie.isSensitive() and\n  cookie.isServerSide() and\n  not cookie.isHttpOnly()\nselect cookie, \"Sensitive server cookie is missing 'httpOnly' flag.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-1004/ClientExposedCookie.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-1004"
  },
  {
    "name": "BadTagFilter.ql",
    "path": "javascript/ql/src/Security/CWE-116/BadTagFilter.ql",
    "language": "javascript",
    "size": 863,
    "content": "/**\n * @name Bad HTML filtering regexp\n * @description Matching HTML tags using regular expressions is hard to do right, and can easily lead to security issues.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/bad-tag-filter\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n *       external/cwe/cwe-080\n *       external/cwe/cwe-116\n *       external/cwe/cwe-184\n *       external/cwe/cwe-185\n *       external/cwe/cwe-186\n */\n\nprivate import semmle.javascript.security.regexp.RegExpTreeView::RegExpTreeView as TreeView\nimport codeql.regex.nfa.BadTagFilterQuery::Make<TreeView>\n\nfrom HtmlMatchingRegExp regexp, string msg\nwhere msg = min(string m | isBadRegexpFilter(regexp, m) | m order by m.length(), m) // there might be multiple, we arbitrarily pick the shortest one\nselect regexp, msg\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-116/BadTagFilter.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-116"
  },
  {
    "name": "DoubleEscaping.ql",
    "path": "javascript/ql/src/Security/CWE-116/DoubleEscaping.ql",
    "language": "javascript",
    "size": 3940,
    "content": "/**\n * @name Double escaping or unescaping\n * @description When escaping special characters using a meta-character like backslash or\n *              ampersand, the meta-character has to be escaped first to avoid double-escaping,\n *              and conversely it has to be unescaped last to avoid double-unescaping.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/double-escaping\n * @tags correctness\n *       security\n *       external/cwe/cwe-116\n *       external/cwe/cwe-020\n */\n\nimport javascript\n\n/**\n * Gets a predecessor of `nd` that is not an SSA phi node.\n */\nDataFlow::Node getASimplePredecessor(DataFlow::Node nd) {\n  result = nd.getAPredecessor() and\n  not exists(SsaDefinition ssa |\n    ssa = nd.(DataFlow::SsaDefinitionNode).getSsaVariable().getDefinition()\n  |\n    ssa instanceof SsaPhiNode or\n    ssa instanceof SsaVariableCapture\n  )\n}\n\n/**\n * Holds if `metachar` is a meta-character that is used to escape special characters\n * into a form described by regular expression `regex`.\n */\npredicate escapingScheme(string metachar, string regex) {\n  metachar = \"&\" and regex = \"&.+;\"\n  or\n  metachar = \"%\" and regex = \"%.+\"\n  or\n  metachar = \"\\\\\" and regex = \"\\\\\\\\.+\"\n}\n\n/**\n * A call to `String.prototype.replace` that replaces all instances of a pattern.\n */\nclass Replacement extends StringReplaceCall {\n  Replacement() { this.isGlobal() }\n\n  /**\n   * Gets the input of this replacement.\n   */\n  DataFlow::Node getInput() { result = this.getReceiver() }\n\n  /**\n   * Gets the output of this replacement.\n   */\n  DataFlow::SourceNode getOutput() { result = this }\n\n  /**\n   * Holds if this replacement escapes `char` using `metachar`.\n   *\n   * For example, during HTML entity escaping `<` is escaped (to `&lt;`)\n   * using `&`.\n   */\n  predicate escapes(string char, string metachar) {\n    exists(string regexp, string repl |\n      escapingScheme(metachar, regexp) and\n      this.replaces(char, repl) and\n      repl.regexpMatch(reg",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-116/DoubleEscaping.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-116"
  },
  {
    "name": "IncompleteHtmlAttributeSanitization.ql",
    "path": "javascript/ql/src/Security/CWE-116/IncompleteHtmlAttributeSanitization.ql",
    "language": "javascript",
    "size": 1681,
    "content": "/**\n * @name Incomplete HTML attribute sanitization\n * @description Writing incompletely sanitized values to HTML\n *              attribute strings can lead to a cross-site\n *              scripting vulnerability.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.1\n * @precision high\n * @id js/incomplete-html-attribute-sanitization\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n *       external/cwe/cwe-020\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.IncompleteHtmlAttributeSanitizationQuery\nimport semmle.javascript.security.IncompleteBlacklistSanitizer\nimport DataFlow::DeduplicatePathGraph<IncompleteHtmlAttributeSanitizationFlow::PathNode, IncompleteHtmlAttributeSanitizationFlow::PathGraph>\n\n/**\n * Gets a pretty string of the dangerous characters for `sink`.\n */\nstring prettyPrintDangerousCharaters(Sink sink) {\n  result =\n    strictconcat(string s |\n      s = describeCharacters(sink.getADangerousCharacter())\n    |\n      s, \", \" order by s\n    ).regexpReplaceAll(\",(?=[^,]+$)\", \" or\")\n}\n\nfrom PathNode source, PathNode sink\nwhere\n  IncompleteHtmlAttributeSanitizationFlow::flowPath(source.getAnOriginalPathNode(),\n    sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink,\n  // this message is slightly sub-optimal as we do not have an easy way\n  // to get the flow labels that reach the sink, so the message includes\n  // all of them in a disjunction\n  \"Cross-site scripting vulnerability as the output of $@ may contain \" +\n    prettyPrintDangerousCharaters(sink.getNode()) + \" when it reaches this attribute definition.\",\n  source.getNode(), \"this final HTML sanitizer step\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-116/IncompleteHtmlAttributeSanitization.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-116"
  },
  {
    "name": "IncompleteMultiCharacterSanitization.ql",
    "path": "javascript/ql/src/Security/CWE-116/IncompleteMultiCharacterSanitization.ql",
    "language": "javascript",
    "size": 510,
    "content": "/**\n * @name Incomplete multi-character sanitization\n * @description A sanitizer that removes a sequence of characters may reintroduce the dangerous sequence.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/incomplete-multi-character-sanitization\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n *       external/cwe/cwe-080\n *       external/cwe/cwe-116\n */\n\nimport semmle.javascript.security.IncompleteMultiCharacterSanitizationQuery\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-116/IncompleteMultiCharacterSanitization.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-116"
  },
  {
    "name": "IncompleteSanitization.ql",
    "path": "javascript/ql/src/Security/CWE-116/IncompleteSanitization.ql",
    "language": "javascript",
    "size": 5975,
    "content": "/**\n * @name Incomplete string escaping or encoding\n * @description A string transformer that does not replace or escape all occurrences of a\n *              meta-character may be ineffective.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/incomplete-sanitization\n * @tags correctness\n *       security\n *       external/cwe/cwe-020\n *       external/cwe/cwe-080\n *       external/cwe/cwe-116\n */\n\nimport javascript\n\n/**\n * Gets a character that is commonly used as a meta-character.\n */\nstring metachar() { result = \"'\\\"\\\\&<>\\n\\r\\t*|{}[]%$\".charAt(_) }\n\n/** Gets a string matched by `e` in a `replace` call. */\nstring getAMatchedString(DataFlow::Node e) {\n  result = e.(DataFlow::RegExpCreationNode).getRoot().getAMatchedString()\n  or\n  result = e.getStringValue()\n}\n\n/** Holds if `t` is simple, that is, a union of constants. */\npredicate isSimple(RegExpTerm t) {\n  t instanceof RegExpConstant\n  or\n  isSimple(t.(RegExpGroup).getAChild())\n  or\n  isSimpleCharacterClass(t)\n  or\n  isSimpleAlt(t)\n}\n\n/** Holds if `t` is a non-inverted character class that contains no ranges. */\npredicate isSimpleCharacterClass(RegExpCharacterClass t) {\n  not t.isInverted() and\n  forall(RegExpTerm ch | ch = t.getAChild() | isSimple(ch))\n}\n\n/** Holds if `t` is an alternation of simple terms. */\npredicate isSimpleAlt(RegExpAlt t) { forall(RegExpTerm ch | ch = t.getAChild() | isSimple(ch)) }\n\n/**\n * Holds if `mce` is of the form `x.replace(re, new)`, where `re` is a global\n * regular expression and `new` prefixes the matched string with a backslash.\n */\npredicate isBackslashEscape(StringReplaceCall mce, DataFlow::RegExpCreationNode re) {\n  mce.maybeGlobal() and\n  re = mce.getRegExp() and\n  (\n    // replacement with `\\$&`, `\\$1` or similar\n    mce.getRawReplacement().getStringValue().regexpMatch(\"\\\\\\\\\\\\$(&|\\\\d)\")\n    or\n    // replacement of `c` with `\\c`\n    exists(string c | mce.replaces(c, \"\\\\\" + c))\n  )\n}\n\n/**\n * Holds if data flowing into `nd` ha",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-116/IncompleteSanitization.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-116"
  },
  {
    "name": "UnsafeHtmlExpansion.ql",
    "path": "javascript/ql/src/Security/CWE-116/UnsafeHtmlExpansion.ql",
    "language": "javascript",
    "size": 2079,
    "content": "/**\n * @name Unsafe expansion of self-closing HTML tag\n * @description Using regular expressions to expand self-closing HTML\n *              tags may lead to cross-site scripting vulnerabilities.\n * @kind problem\n * @problem.severity warning\n * @security-severity 6.1\n * @precision very-high\n * @id js/unsafe-html-expansion\n * @tags correctness\n *       security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n */\n\nimport javascript\n\n/**\n * A regular expression that captures the name and content of a\n * self-closing HTML tag such as `<div id='foo'/>`.\n */\nclass SelfClosingTagRecognizer extends DataFlow::RegExpCreationNode {\n  SelfClosingTagRecognizer() {\n    exists(RegExpSequence seq, RegExpGroup name, RegExpGroup content |\n      // `/.../g`\n      RegExp::isGlobal(this.getFlags()) and\n      this.getRoot() = seq.getRootTerm() and\n      // `/<.../`\n      seq.getChild(0).getConstantValue() = \"<\" and\n      // `/...\\/>/`\n      seq.getLastChild().getPredecessor().getConstantValue() = \"/\" and\n      seq.getLastChild().getConstantValue() = \">\" and\n      // `/...((...)...).../`\n      seq.getAChild() = content and\n      content.getNumber() = 1 and\n      name.getNumber() = 2 and\n      name = content.getChild(0).(RegExpSequence).getChild(0) and\n      // `/...(([a-z]+)...).../` or `/...(([a-z][...]*)...).../`\n      exists(RegExpQuantifier quant | name.getAChild*() = quant |\n        quant instanceof RegExpStar or\n        quant instanceof RegExpPlus\n      ) and\n      // `/...((...)[^>]*).../`\n      exists(RegExpCharacterClass lazy |\n        name.getSuccessor().(RegExpStar).getChild(0) = lazy and\n        lazy.isInverted() and\n        lazy.getAChild().getConstantValue() = \">\"\n      )\n    )\n  }\n}\n\nfrom SelfClosingTagRecognizer regexp, StringReplaceCall replace\nwhere\n  regexp.getAReference().flowsTo(replace.getArgument(0)) and\n  replace.getRawReplacement().mayHaveStringValue(\"<$1></$2>\")\nselect replace,\n  \"This self-closing HTML tag expansion invalidates prior sanitization as ",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-116/UnsafeHtmlExpansion.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-116"
  },
  {
    "name": "LogInjection.ql",
    "path": "javascript/ql/src/Security/CWE-117/LogInjection.ql",
    "language": "javascript",
    "size": 695,
    "content": "/**\n * @name Log injection\n * @description Building log entries from user-controlled sources is vulnerable to\n *              insertion of forged log entries by a malicious user.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 6.1\n * @precision medium\n * @id js/log-injection\n * @tags security\n *       external/cwe/cwe-117\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.LogInjectionQuery\nimport LogInjectionFlow::PathGraph\n\nfrom LogInjectionFlow::PathNode source, LogInjectionFlow::PathNode sink\nwhere LogInjectionFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Log entry depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-117/LogInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-117"
  },
  {
    "name": "SameSiteNoneCookie.ql",
    "path": "javascript/ql/src/Security/CWE-1275/SameSiteNoneCookie.ql",
    "language": "javascript",
    "size": 698,
    "content": "/**\n * @name Sensitive cookie without SameSite restrictions\n * @description Sensitive cookies where the SameSite attribute is set to \"None\" can\n *              in some cases allow for Cross-Site Request Forgery (CSRF) attacks.\n * @kind problem\n * @problem.severity warning\n * @security-severity 5.0\n * @precision medium\n * @id js/samesite-none-cookie\n * @tags security\n *       external/cwe/cwe-1275\n */\n\nimport javascript\n\nfrom CookieWrites::CookieWrite cookie\nwhere\n  cookie.isSensitive() and\n  cookie.isSecure() and // `js/clear-text-cookie` will report it if the cookie is not secure.\n  cookie.getSameSite().toLowerCase() = \"none\"\nselect cookie, \"Sensitive cookie with SameSite set to 'None'.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-1275/SameSiteNoneCookie.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-1275"
  },
  {
    "name": "TaintedFormatString.ql",
    "path": "javascript/ql/src/Security/CWE-134/TaintedFormatString.ql",
    "language": "javascript",
    "size": 702,
    "content": "/**\n * @name Use of externally-controlled format string\n * @description Using external input in format strings can lead to garbled output.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 7.3\n * @precision high\n * @id js/tainted-format-string\n * @tags security\n *       external/cwe/cwe-134\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.TaintedFormatStringQuery\nimport TaintedFormatStringFlow::PathGraph\n\nfrom TaintedFormatStringFlow::PathNode source, TaintedFormatStringFlow::PathNode sink\nwhere TaintedFormatStringFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Format string depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-134/TaintedFormatString.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-134"
  },
  {
    "name": "CaseSensitiveMiddlewarePath.ql",
    "path": "javascript/ql/src/Security/CWE-178/CaseSensitiveMiddlewarePath.ql",
    "language": "javascript",
    "size": 5122,
    "content": "/**\n * @name Case-sensitive middleware path\n * @description Middleware with case-sensitive paths do not protect endpoints with case-insensitive paths.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.3\n * @precision high\n * @id js/case-sensitive-middleware-path\n * @tags security\n *       external/cwe/cwe-178\n */\n\nimport javascript\n\n/**\n * Converts `s` to upper case, or to lower-case if it was already upper case.\n */\nbindingset[s]\nstring toOtherCase(string s) {\n  if s.regexpMatch(\".*[a-z].*\") then result = s.toUpperCase() else result = s.toLowerCase()\n}\n\nprivate import semmle.javascript.security.regexp.RegExpTreeView::RegExpTreeView as TreeView\nimport codeql.regex.nfa.NfaUtils::Make<TreeView> as NfaUtils\n\n/** Holds if `s` is a relevant regexp term were we want to compute a string that matches the term (for `getCaseSensitiveBypassExample`). */\npredicate isCand(NfaUtils::State s) {\n  s.getRepr() instanceof NfaUtils::RegExpRoot and\n  exists(DataFlow::RegExpCreationNode creation |\n    isCaseSensitiveMiddleware(_, creation, _) and\n    s.getRepr().getRootTerm() = creation.getRoot()\n  )\n}\n\nimport NfaUtils::PrefixConstruction<isCand/1> as Prefix\n\n/** Gets a string matched by `term`. */\nstring getExampleString(RegExpTerm term) {\n  result = Prefix::prefix(any(NfaUtils::State s | s.getRepr() = term))\n}\n\nstring getCaseSensitiveBypassExample(RegExpTerm term) {\n  exists(string byPassExample |\n    byPassExample = getExampleString(term) and\n    result = toOtherCase(byPassExample) and\n    result != byPassExample // getting an byPassExample string is approximate; ensure we got a proper case-change byPassExample\n  )\n}\n\n/**\n * Holds if `setup` has a path-argument `arg` referring to the given case-sensitive `regexp`.\n */\npredicate isCaseSensitiveMiddleware(\n  Routing::RouteSetup setup, DataFlow::RegExpCreationNode regexp, DataFlow::Node arg\n) {\n  exists(DataFlow::MethodCallNode call |\n    setup = Routing::getRouteSetupNode(call) and\n    (\n      setup.definitelyResume",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-178/CaseSensitiveMiddlewarePath.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-178"
  },
  {
    "name": "FileAccessToHttp.ql",
    "path": "javascript/ql/src/Security/CWE-200/FileAccessToHttp.ql",
    "language": "javascript",
    "size": 722,
    "content": "/**\n * @name File data in outbound network request\n * @description Directly sending file data in an outbound network request can indicate unauthorized information disclosure.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.5\n * @precision medium\n * @id js/file-access-to-http\n * @tags security\n *       external/cwe/cwe-200\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.FileAccessToHttpQuery\nimport FileAccessToHttpFlow::PathGraph\n\nfrom FileAccessToHttpFlow::PathNode source, FileAccessToHttpFlow::PathNode sink\nwhere FileAccessToHttpFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Outbound network request depends on $@.\", source.getNode(),\n  \"file data\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-200/FileAccessToHttp.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-200"
  },
  {
    "name": "PrivateFileExposure.ql",
    "path": "javascript/ql/src/Security/CWE-200/PrivateFileExposure.ql",
    "language": "javascript",
    "size": 5313,
    "content": "/**\n * @name Exposure of private files\n * @description Exposing a node_modules folder, or the project folder to the public, can cause exposure\n *              of private information.\n * @kind problem\n * @problem.severity warning\n * @security-severity 6.5\n * @id js/exposure-of-private-files\n * @tags security\n *       external/cwe/cwe-200\n *       external/cwe/cwe-219\n *       external/cwe/cwe-548\n * @precision high\n */\n\nimport javascript\n\n/**\n * Holds if `folder` is a node_modules folder, and at most 1 subdirectory down.\n */\nbindingset[folder]\npredicate isNodeModuleFolder(string folder) {\n  folder.regexpMatch(\"(\\\\.?\\\\.?/)*node_modules(/|(/[a-zA-Z@_-]+/?))?\")\n}\n\n/**\n * Get a data-flow node that represents a path to the node_modules folder represented by the string-literal `path`.\n */\nDataFlow::Node getANodeModulePath(string path) {\n  result.getStringValue() = path and\n  isNodeModuleFolder(path)\n  or\n  exists(DataFlow::CallNode resolve |\n    resolve = DataFlow::moduleMember(\"path\", [\"resolve\", \"join\"]).getACall()\n  |\n    result = resolve and\n    resolve.getLastArgument() = getANodeModulePath(path)\n  )\n  or\n  exists(StringOps::ConcatenationRoot root | root = result |\n    root.getLastLeaf() = getANodeModulePath(path)\n  )\n  or\n  result.getAPredecessor() = getANodeModulePath(path) // local data-flow\n  or\n  exists(string base, string folder |\n    path = base + folder and\n    folder.regexpMatch(\"(/)?[a-zA-Z@_-]+/?\") and\n    base.regexpMatch(\"(\\\\.?\\\\.?/)*node_modules(/)?\") // node_modules, without any sub-folders.\n  |\n    exists(StringOps::ConcatenationRoot root | root = result |\n      root.getNumOperand() = 2 and\n      root.getFirstLeaf() = getANodeModulePath(base) and\n      root.getLastLeaf().getStringValue() = folder\n    )\n    or\n    exists(DataFlow::CallNode resolve |\n      resolve = DataFlow::moduleMember(\"path\", [\"resolve\", \"join\"]).getACall()\n    |\n      result = resolve and\n      resolve.getNumArgument() = 2 and\n      resolve.getArgument(0) = getANodeModulePath(path) ",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-200/PrivateFileExposure.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-200"
  },
  {
    "name": "PostMessageStar.ql",
    "path": "javascript/ql/src/Security/CWE-201/PostMessageStar.ql",
    "language": "javascript",
    "size": 889,
    "content": "/**\n * @name Cross-window communication with unrestricted target origin\n * @description When sending sensitive information to another window using `postMessage`,\n *              the origin of the target window should be restricted to avoid unintentional\n *              information leaks.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 4.3\n * @precision high\n * @id js/cross-window-information-leak\n * @tags security\n *       external/cwe/cwe-201\n *       external/cwe/cwe-359\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.PostMessageStarQuery\nimport PostMessageStarFlow::PathGraph\n\nfrom PostMessageStarFlow::PathNode source, PostMessageStarFlow::PathNode sink\nwhere PostMessageStarFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"$@ is sent to another window without origin restriction.\",\n  source.getNode(), \"Sensitive data\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-201/PostMessageStar.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-201"
  },
  {
    "name": "StackTraceExposure.ql",
    "path": "javascript/ql/src/Security/CWE-209/StackTraceExposure.ql",
    "language": "javascript",
    "size": 895,
    "content": "/**\n * @name Information exposure through a stack trace\n * @description Propagating stack trace information to an external user can\n *              unintentionally reveal implementation details that are useful\n *              to an attacker for developing a subsequent exploit.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 5.4\n * @precision very-high\n * @id js/stack-trace-exposure\n * @tags security\n *       external/cwe/cwe-209\n *       external/cwe/cwe-497\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.StackTraceExposureQuery\nimport StackTraceExposureFlow::PathGraph\n\nfrom StackTraceExposureFlow::PathNode source, StackTraceExposureFlow::PathNode sink\nwhere StackTraceExposureFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"This information exposed to the user depends on $@.\",\n  source.getNode(), \"stack trace information\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-209/StackTraceExposure.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-209"
  },
  {
    "name": "DisablingCertificateValidation.ql",
    "path": "javascript/ql/src/Security/CWE-295/DisablingCertificateValidation.ql",
    "language": "javascript",
    "size": 1829,
    "content": "/**\n * @name Disabling certificate validation\n * @description Disabling cryptographic certificate validation can cause security vulnerabilities.\n * @kind problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision very-high\n * @id js/disabling-certificate-validation\n * @tags security\n *       external/cwe/cwe-295\n *       external/cwe/cwe-297\n */\n\nimport javascript\n\n/** Gets options argument for a potential TLS connection */\nDataFlow::InvokeNode tlsInvocation() {\n  result instanceof ClientRequest\n  or\n  result = DataFlow::moduleMember(\"https\", \"Agent\").getAnInstantiation()\n  or\n  result = DataFlow::moduleMember(\"https\", \"createServer\").getACall()\n  or\n  exists(DataFlow::NewNode new |\n    new = DataFlow::moduleMember(\"tls\", \"TLSSocket\").getAnInstantiation()\n  |\n    result = new or\n    result = new.getAMethodCall(\"renegotiate\")\n  )\n  or\n  result = DataFlow::moduleMember(\"tls\", [\"connect\", \"createServer\"]).getACall()\n}\n\n/** Gets an options object for a TLS connection. */\nDataFlow::ObjectLiteralNode tlsOptions() { result.flowsTo(tlsInvocation().getAnArgument()) }\n\nfrom DataFlow::PropWrite disable\nwhere\n  exists(DataFlow::SourceNode env |\n    env.(ThreatModelSource).getThreatModel() = \"environment\" and\n    disable = env.getAPropertyWrite(\"NODE_TLS_REJECT_UNAUTHORIZED\") and\n    disable.getRhs().mayHaveStringValue(\"0\")\n  )\n  or\n  (\n    disable = tlsOptions().getAPropertyWrite(\"rejectUnauthorized\")\n    or\n    // the same thing, but with API-nodes if they happen to be available\n    exists(API::Node tlsInvk | tlsInvk.getAnInvocation() = tlsInvocation() |\n      disable.getRhs() = tlsInvk.getAParameter().getMember(\"rejectUnauthorized\").asSink()\n    )\n  ) and\n  disable.getRhs().(AnalyzedNode).getTheBooleanValue() = false\nselect disable, \"Disabling certificate validation is strongly discouraged.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-295/DisablingCertificateValidation.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-295"
  },
  {
    "name": "InsecureDependencyResolution.ql",
    "path": "javascript/ql/src/Security/CWE-300/InsecureDependencyResolution.ql",
    "language": "javascript",
    "size": 747,
    "content": "/**\n * @name Dependency download using unencrypted communication channel\n * @description Using unencrypted protocols to fetch dependencies can leave an application\n *              open to man-in-the-middle attacks.\n * @kind problem\n * @problem.severity warning\n * @security-severity 8.1\n * @precision high\n * @id js/insecure-dependency\n * @tags security\n *       external/cwe/cwe-300\n *       external/cwe/cwe-319\n *       external/cwe/cwe-494\n *       external/cwe/cwe-829\n */\n\nimport javascript\n\nfrom PackageJson pack, JsonString val\nwhere\n  [pack.getDependencies(), pack.getDevDependencies()].getPropValue(_) = val and\n  val.getValue().regexpMatch(\"(http|ftp)://.*\")\nselect val, \"Dependency downloaded using unencrypted communication channel.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-300/InsecureDependencyResolution.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-300"
  },
  {
    "name": "BuildArtifactLeak.ql",
    "path": "javascript/ql/src/Security/CWE-312/BuildArtifactLeak.ql",
    "language": "javascript",
    "size": 872,
    "content": "/**\n * @name Storage of sensitive information in build artifact\n * @description Including sensitive information in a build artifact can\n *              expose it to an attacker.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision high\n * @id js/build-artifact-leak\n * @tags security\n *       external/cwe/cwe-312\n *       external/cwe/cwe-315\n *       external/cwe/cwe-359\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.BuildArtifactLeakQuery\nimport BuildArtifactLeakFlow::PathGraph\n\nfrom BuildArtifactLeakFlow::PathNode source, BuildArtifactLeakFlow::PathNode sink\nwhere BuildArtifactLeakFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"This creates a build artifact that depends on $@.\",\n  source.getNode(),\n  \"sensitive data returned by\" + source.getNode().(CleartextLogging::Source).describe()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-312/BuildArtifactLeak.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-312"
  },
  {
    "name": "CleartextLogging.ql",
    "path": "javascript/ql/src/Security/CWE-312/CleartextLogging.ql",
    "language": "javascript",
    "size": 1364,
    "content": "/**\n * @name Clear-text logging of sensitive information\n * @description Logging sensitive information without encryption or hashing can\n *              expose it to an attacker.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision high\n * @id js/clear-text-logging\n * @tags security\n *       external/cwe/cwe-312\n *       external/cwe/cwe-359\n *       external/cwe/cwe-532\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.CleartextLoggingQuery\nimport CleartextLoggingFlow::PathGraph\n\n/**\n * Holds if `tl` is used in a browser environment.\n */\npredicate inBrowserEnvironment(TopLevel tl) {\n  tl instanceof InlineScript\n  or\n  tl instanceof CodeInAttribute\n  or\n  exists(GlobalVarAccess e | e.getTopLevel() = tl | e.getName() = \"window\")\n  or\n  exists(Module m | inBrowserEnvironment(m) |\n    tl = m.getAnImportedModule() or\n    m = tl.(Module).getAnImportedModule()\n  )\n}\n\nfrom CleartextLoggingFlow::PathNode source, CleartextLoggingFlow::PathNode sink\nwhere\n  CleartextLoggingFlow::flowPath(source, sink) and\n  // ignore logging to the browser console (even though it is not a good practice)\n  not inBrowserEnvironment(sink.getNode().asExpr().getTopLevel())\nselect sink.getNode(), source, sink, \"This logs sensitive data returned by $@ as clear text.\",\n  source.getNode(), source.getNode().(Source).describe()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-312/CleartextLogging.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-312"
  },
  {
    "name": "CleartextStorage.ql",
    "path": "javascript/ql/src/Security/CWE-312/CleartextStorage.ql",
    "language": "javascript",
    "size": 840,
    "content": "/**\n * @name Clear text storage of sensitive information\n * @description Sensitive information stored without encryption or hashing can expose it to an\n *              attacker.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision high\n * @id js/clear-text-storage-of-sensitive-data\n * @tags security\n *       external/cwe/cwe-312\n *       external/cwe/cwe-315\n *       external/cwe/cwe-359\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.CleartextStorageQuery\nimport ClearTextStorageFlow::PathGraph\n\nfrom ClearTextStorageFlow::PathNode source, ClearTextStorageFlow::PathNode sink\nwhere ClearTextStorageFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"This stores sensitive data returned by $@ as clear text.\",\n  source.getNode(), source.getNode().(Source).describe()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-312/CleartextStorage.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-312"
  },
  {
    "name": "PasswordInConfigurationFile.ql",
    "path": "javascript/ql/src/Security/CWE-313/PasswordInConfigurationFile.ql",
    "language": "javascript",
    "size": 1195,
    "content": "/**\n * @name Password in configuration file\n * @description Storing unencrypted passwords in configuration files is unsafe.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.5\n * @precision low\n * @id js/password-in-configuration-file\n * @tags security\n *       external/cwe/cwe-256\n *       external/cwe/cwe-260\n *       external/cwe/cwe-313\n *       external/cwe/cwe-522\n */\n\nimport javascript\nimport semmle.javascript.security.PasswordInConfigurationFileQuery\n\nfrom string key, string val, Locatable valElement, string pwd\nwhere\n  config(key, val, valElement) and\n  val != \"\" and\n  (\n    key.toLowerCase() = \"password\" and\n    pwd = val and\n    // exclude interpolations of environment variables\n    not val.regexpMatch(\"\\\\$.*|%.*%\") and\n    not PasswordHeuristics::isDummyPassword(val)\n    or\n    not key.toLowerCase() = [\"readme\", \"run\"] and\n    // look for `password=...`, but exclude `password=;`, `password=\"$(...)\"`, `password=foo()`\n    // `password=%s` and `password==`\n    pwd = val.regexpCapture(\"(?is).*password\\\\s*=\\\\s*(?!;|\\\"?[$`]|%s|=|\\\\w+\\\\(.+\\\\))(\\\\S+).*\", 1)\n  )\nselect valElement.(FirstLineOf), \"Hard-coded password '\" + pwd + \"' in configuration file.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-313/PasswordInConfigurationFile.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-313"
  },
  {
    "name": "InsufficientKeySize.ql",
    "path": "javascript/ql/src/Security/CWE-326/InsufficientKeySize.ql",
    "language": "javascript",
    "size": 945,
    "content": "/**\n * @name Use of a weak cryptographic key\n * @description Using a weak cryptographic key can allow an attacker to compromise security.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.5\n * @precision high\n * @id js/insufficient-key-size\n * @tags security\n *       external/cwe/cwe-326\n */\n\nimport javascript\n\nfrom CryptographicKeyCreation key, int size, string msg, string algo\nwhere\n  size = key.getSize() and\n  (\n    algo = key.getAlgorithm() + \" \"\n    or\n    not exists(key.getAlgorithm()) and algo = \"\"\n  ) and\n  (\n    size < 128 and\n    key.isSymmetricKey() and\n    msg =\n      \"Creation of an symmetric \" + algo + \"key uses \" + size +\n        \" bits, which is below 128 and considered breakable.\"\n    or\n    size < 2048 and\n    not key.isSymmetricKey() and\n    msg =\n      \"Creation of an asymmetric \" + algo + \"key uses \" + size +\n        \" bits, which is below 2048 and considered breakable.\"\n  )\nselect key, msg\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-326/InsufficientKeySize.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-326"
  },
  {
    "name": "BadRandomness.ql",
    "path": "javascript/ql/src/Security/CWE-327/BadRandomness.ql",
    "language": "javascript",
    "size": 7032,
    "content": "/**\n * @name Creating biased random numbers from a cryptographically secure source\n * @description Some mathematical operations on random numbers can cause bias in\n *              the results and compromise security.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.5\n * @precision high\n * @id js/biased-cryptographic-random\n * @tags security\n *       external/cwe/cwe-327\n */\n\nimport javascript\nprivate import semmle.javascript.dataflow.internal.StepSummary\nprivate import semmle.javascript.security.dataflow.InsecureRandomnessCustomizations\nprivate import semmle.javascript.dataflow.InferredTypes\n\n/**\n * Gets a number that is a power of 2.\n */\nprivate int powerOfTwo() {\n  result = 1\n  or\n  result = 2 * powerOfTwo() and\n  not result < 0\n}\n\n/**\n * Gets a node that has value 2^n for some n.\n */\nprivate DataFlow::Node isPowerOfTwo() {\n  result.getIntValue() = powerOfTwo()\n  or\n  // Getting around the 32 bit ints in QL. These are some hex values of the form 0x10000000\n  result.asExpr().(NumberLiteral).getValue() =\n    [\"281474976710656\", \"17592186044416\", \"1099511627776\", \"68719476736\", \"4294967296\"]\n  or\n  result = isPowerOfTwo().getASuccessor()\n}\n\n/**\n * Gets a node that has value (2^n)-1 for some n.\n */\nprivate DataFlow::Node isPowerOfTwoMinusOne() {\n  result.getIntValue() = powerOfTwo() - 1\n  or\n  // Getting around the 32 bit ints in QL. These are some hex values of the form 0xfffffff\n  result.asExpr().(NumberLiteral).getValue() =\n    [\"281474976710655\", \"17592186044415\", \"1099511627775\", \"68719476735\", \"4294967295\"]\n  or\n  result = isPowerOfTwoMinusOne().getASuccessor()\n}\n\n/**\n * Gets the pseudo-property used to track elements inside a Buffer.\n * The API for `Set` is close enough to the API for `Buffer` that we can reuse the type-tracking steps.\n */\nprivate string prop() { result = DataFlow::PseudoProperties::setElement() }\n\n/**\n * Gets a reference to a cryptographically secure random number produced by `source` and type tracked using `t`.\n */\nprivat",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-327/BadRandomness.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-327"
  },
  {
    "name": "BrokenCryptoAlgorithm.ql",
    "path": "javascript/ql/src/Security/CWE-327/BrokenCryptoAlgorithm.ql",
    "language": "javascript",
    "size": 1091,
    "content": "/**\n * @name Use of a broken or weak cryptographic algorithm\n * @description Using broken or weak cryptographic algorithms can compromise security.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 7.5\n * @precision high\n * @id js/weak-cryptographic-algorithm\n * @tags security\n *       external/cwe/cwe-327\n *       external/cwe/cwe-328\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.BrokenCryptoAlgorithmQuery\nimport semmle.javascript.security.SensitiveActions\nimport BrokenCryptoAlgorithmFlow::PathGraph\n\nfrom\n  BrokenCryptoAlgorithmFlow::PathNode source, BrokenCryptoAlgorithmFlow::PathNode sink,\n  Source sourceNode, Sink sinkNode\nwhere\n  BrokenCryptoAlgorithmFlow::flowPath(source, sink) and\n  sourceNode = source.getNode() and\n  sinkNode = sink.getNode() and\n  not sourceNode instanceof CleartextPasswordExpr // flagged by js/insufficient-password-hash\nselect sinkNode, source, sink, \"$@ depends on $@.\", sinkNode.getInitialization(),\n  \"A broken or weak cryptographic algorithm\", sourceNode,\n  \"sensitive data from \" + sourceNode.describe()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-327/BrokenCryptoAlgorithm.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-327"
  },
  {
    "name": "InsecureRandomness.ql",
    "path": "javascript/ql/src/Security/CWE-338/InsecureRandomness.ql",
    "language": "javascript",
    "size": 870,
    "content": "/**\n * @name Insecure randomness\n * @description Using a cryptographically weak pseudo-random number generator to generate a\n *              security-sensitive value may allow an attacker to predict what value will\n *              be generated.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 7.8\n * @precision high\n * @id js/insecure-randomness\n * @tags security\n *       external/cwe/cwe-338\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.InsecureRandomnessQuery\nimport InsecureRandomnessFlow::PathGraph\n\nfrom InsecureRandomnessFlow::PathNode source, InsecureRandomnessFlow::PathNode sink\nwhere InsecureRandomnessFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink,\n  \"This uses a cryptographically insecure random number generated at $@ in a security context.\",\n  source.getNode(), source.getNode().toString()\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-338/InsecureRandomness.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-338"
  },
  {
    "name": "CorsMisconfigurationForCredentials.ql",
    "path": "javascript/ql/src/Security/CWE-346/CorsMisconfigurationForCredentials.ql",
    "language": "javascript",
    "size": 888,
    "content": "/**\n * @name CORS misconfiguration for credentials transfer\n * @description Misconfiguration of CORS HTTP headers allows for leaks of secret credentials.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision high\n * @id js/cors-misconfiguration-for-credentials\n * @tags security\n *       external/cwe/cwe-346\n *       external/cwe/cwe-639\n *       external/cwe/cwe-942\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.CorsMisconfigurationForCredentialsQuery\nimport CorsMisconfigurationFlow::PathGraph\n\nfrom CorsMisconfigurationFlow::PathNode source, CorsMisconfigurationFlow::PathNode sink\nwhere CorsMisconfigurationFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"$@ leak vulnerability due to a $@.\",\n  sink.getNode().(Sink).getCredentialsHeader(), \"Credential\", source.getNode(),\n  \"misconfigured CORS header value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-346/CorsMisconfigurationForCredentials.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-346"
  },
  {
    "name": "MissingJWTKeyVerification.ql",
    "path": "javascript/ql/src/Security/CWE-347/MissingJWTKeyVerification.ql",
    "language": "javascript",
    "size": 686,
    "content": "/**\n * @name JWT missing secret or public key verification\n * @description The application does not verify the JWT payload with a cryptographic secret or public key.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.0\n * @precision high\n * @id js/jwt-missing-verification\n * @tags security\n *       external/cwe/cwe-347\n */\n\nimport javascript\nimport semmle.javascript.RestrictedLocations\n\nfrom DataFlow::CallNode call\nwhere\n  call = DataFlow::moduleMember(\"jsonwebtoken\", \"verify\").getACall() and\n  call.getArgument(1).analyze().getTheBooleanValue() = false\nselect call.getArgument(1),\n  \"This argument disables the integrity enforcement of the token verification.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-347/MissingJWTKeyVerification.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-347"
  },
  {
    "name": "MissingCsrfMiddleware.ql",
    "path": "javascript/ql/src/Security/CWE-352/MissingCsrfMiddleware.ql",
    "language": "javascript",
    "size": 7774,
    "content": "/**\n * @name Missing CSRF middleware\n * @description Using cookies without CSRF protection may allow malicious websites to\n *              submit requests on behalf of the user.\n * @kind problem\n * @problem.severity error\n * @security-severity 8.8\n * @precision high\n * @id js/missing-token-validation\n * @tags security\n *       external/cwe/cwe-352\n */\n\nimport javascript\n\n/** Gets a property name of `req` which refers to data usually derived from cookie data. */\nstring cookieProperty() { result = \"session\" or result = \"cookies\" or result = \"user\" }\n\n/**\n * Holds if `handler` uses cookies.\n */\npredicate isRouteHandlerUsingCookies(Routing::RouteHandler handler) {\n  exists(DataFlow::PropRef value |\n    value = handler.getAParameter().ref().getAPropertyRead(cookieProperty()).getAPropertyReference() and\n    // Ignore accesses to values that are part of a CSRF or captcha check\n    not value.getPropertyName().regexpMatch(\"(?i).*(csrf|xsrf|captcha).*\") and\n    // Ignore calls like `req.session.save()`\n    not value = any(DataFlow::InvokeNode call).getCalleeNode()\n  )\n}\n\n/**\n * Holds if `route` is preceded by the cookie middleware `cookie`.\n *\n * A router handler following after cookie parsing is assumed to depend on\n * cookies, and thus require CSRF protection.\n */\npredicate hasCookieMiddleware(Routing::Node route, Http::CookieMiddlewareInstance cookie) {\n  route.isGuardedBy(cookie)\n}\n\n/**\n * Gets an expression that creates a route handler which protects against CSRF attacks.\n *\n * Any route handler registered downstream from this type of route handler will\n * be considered protected.\n *\n * For example:\n * ```\n * let csurf = require('csurf');\n * let csrfProtector = csurf();\n *\n * app.post('/changePassword', csrfProtector, function (req, res) {\n *   // protected from CSRF\n * })\n * ```\n */\nDataFlow::SourceNode csrfMiddlewareCreation() {\n  exists(DataFlow::SourceNode callee | result = callee.getACall() |\n    callee = DataFlow::moduleImport([\"csurf\", \"tiny-csrf\"])\n    or\n    cal",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-352/MissingCsrfMiddleware.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-352"
  },
  {
    "name": "FileSystemRace.ql",
    "path": "javascript/ql/src/Security/CWE-367/FileSystemRace.ql",
    "language": "javascript",
    "size": 3392,
    "content": "/**\n * @name Potential file system race condition\n * @description Separately checking the state of a file before operating\n *              on it may allow an attacker to modify the file between\n *              the two operations.\n * @kind problem\n * @problem.severity warning\n * @security-severity 7.7\n * @precision medium\n * @id js/file-system-race\n * @tags security\n *       external/cwe/cwe-367\n */\n\nimport javascript\n\n/**\n * A call that checks a property of some file.\n */\nclass FileCheck extends DataFlow::CallNode {\n  string member;\n\n  FileCheck() {\n    member =\n      [\n        \"open\", \"openSync\", \"exists\", \"existsSync\", \"stat\", \"statSync\", \"lstat\", \"lstatSync\",\n        \"fstat\", \"fstatSync\", \"access\", \"accessSync\"\n      ] and\n    this = NodeJSLib::FS::moduleMember(member).getACall()\n  }\n\n  DataFlow::Node getPathArgument() { result = this.getArgument(0) }\n\n  /** Holds if this call is a simple existence check for a file. */\n  predicate isExistsCheck() { member = [\"exists\", \"existsSync\"] }\n}\n\n/**\n * A call that modifies or otherwise interacts with a file.\n */\nclass FileUse extends DataFlow::CallNode {\n  string member;\n\n  FileUse() {\n    member =\n      [\n        // these are the six methods that accept file paths and file descriptors\n        \"readFile\", \"readFileSync\", \"writeFile\", \"writeFileSync\", \"appendFile\", \"appendFileSync\",\n        // don't use \"open\" after e.g. \"access\"\n        \"open\", \"openSync\"\n      ] and\n    this = NodeJSLib::FS::moduleMember(member).getACall()\n  }\n\n  DataFlow::Node getPathArgument() { result = this.getArgument(0) }\n\n  /** Holds if this call reads from a file. */\n  predicate isFileRead() { member = [\"readFile\", \"readFileSync\"] }\n}\n\n/**\n * Gets a reference to a file-handle from a call to `open` or `openSync`.\n */\nDataFlow::SourceNode getAFileHandle(DataFlow::TypeTracker t) {\n  t.start() and\n  (\n    result = NodeJSLib::FS::moduleMember(\"openSync\").getACall()\n    or\n    result =\n      NodeJSLib::FS::moduleMember(\"open\")\n          .getACall()\n   ",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-367/FileSystemRace.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-367"
  },
  {
    "name": "InsecureTemporaryFile.ql",
    "path": "javascript/ql/src/Security/CWE-377/InsecureTemporaryFile.ql",
    "language": "javascript",
    "size": 793,
    "content": "/**\n * @name Insecure temporary file\n * @description Creating a temporary file that is accessible by other users can\n * lead to information disclosure and sometimes remote code execution.\n * @kind path-problem\n * @id js/insecure-temporary-file\n * @problem.severity warning\n * @security-severity 7.0\n * @precision medium\n * @tags external/cwe/cwe-377\n *       external/cwe/cwe-378\n *       security\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.InsecureTemporaryFileQuery\nimport InsecureTemporaryFileFlow::PathGraph\n\nfrom InsecureTemporaryFileFlow::PathNode source, InsecureTemporaryFileFlow::PathNode sink\nwhere InsecureTemporaryFileFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Insecure creation of file in $@.\", source.getNode(),\n  \"the os temp dir\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-377/InsecureTemporaryFile.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-377"
  },
  {
    "name": "SessionFixation.ql",
    "path": "javascript/ql/src/Security/CWE-384/SessionFixation.ql",
    "language": "javascript",
    "size": 1504,
    "content": "/**\n * @name Failure to abandon session\n * @description Reusing an existing session as a different user could allow\n *              an attacker to access someone else's account by using\n *              their session.\n * @kind problem\n * @problem.severity warning\n * @security-severity 5\n * @precision medium\n * @id js/session-fixation\n * @tags security\n *       external/cwe/cwe-384\n */\n\nimport javascript\n\n/**\n * Holds if `setup` uses express-session (or similar) to log in a user.\n */\npragma[inline]\npredicate isLoginSetup(Express::RouteSetup setup) {\n  // some path that contains \"login\" with a write to `req.session`\n  setup.getPath().matches(\"%login%\") and\n  exists(\n    setup\n        .getARouteHandler()\n        .(Express::RouteHandler)\n        .getARequestSource()\n        .ref()\n        .getAPropertyRead(\"session\")\n        .getAPropertyWrite()\n  )\n  // passport used to be recognized, but they have since added built-in protection against session fixation\n}\n\n/**\n * Holds if `setup` regenerates its session using `req.session.regenerate`.\n */\npragma[inline]\npredicate regeneratesSession(Express::RouteSetup setup) {\n  exists(\n    setup\n        .getARouteHandler()\n        .(Express::RouteHandler)\n        .getARequestSource()\n        .ref()\n        .getAPropertyRead(\"session\")\n        .getAPropertyRead(\"regenerate\")\n  )\n}\n\nfrom Express::RouteSetup setup\nwhere\n  isLoginSetup(setup) and\n  not regeneratesSession(setup)\nselect setup, \"Route handler does not invalidate session following login.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-384/SessionFixation.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-384"
  },
  {
    "name": "DeepObjectResourceExhaustion.ql",
    "path": "javascript/ql/src/Security/CWE-400/DeepObjectResourceExhaustion.ql",
    "language": "javascript",
    "size": 966,
    "content": "/**\n * @name Resources exhaustion from deep object traversal\n * @description Processing user-controlled object hierarchies inefficiently can lead to denial of service.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 7.5\n * @precision high\n * @id js/resource-exhaustion-from-deep-object-traversal\n * @tags security\n *       external/cwe/cwe-400\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.DeepObjectResourceExhaustionQuery\nimport DataFlow::DeduplicatePathGraph<DeepObjectResourceExhaustionFlow::PathNode, DeepObjectResourceExhaustionFlow::PathGraph>\n\nfrom PathNode source, PathNode sink, DataFlow::Node link, string reason\nwhere\n  DeepObjectResourceExhaustionFlow::flowPath(source.getAnOriginalPathNode(),\n    sink.getAnOriginalPathNode()) and\n  sink.getNode().(Sink).hasReason(link, reason)\nselect sink, source, sink, \"Denial of service caused by processing $@ with $@.\", source.getNode(),\n  \"user input\", link, reason\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-400/DeepObjectResourceExhaustion.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-400"
  },
  {
    "name": "RemotePropertyInjection.ql",
    "path": "javascript/ql/src/Security/CWE-400/RemotePropertyInjection.ql",
    "language": "javascript",
    "size": 806,
    "content": "/**\n * @name Remote property injection\n * @description Allowing writes to arbitrary properties of an object may lead to\n *              denial-of-service attacks.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 7.5\n * @precision medium\n * @id js/remote-property-injection\n * @tags security\n *       external/cwe/cwe-250\n *       external/cwe/cwe-400\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.RemotePropertyInjectionQuery\nimport RemotePropertyInjectionFlow::PathGraph\n\nfrom RemotePropertyInjectionFlow::PathNode source, RemotePropertyInjectionFlow::PathNode sink\nwhere RemotePropertyInjectionFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, sink.getNode().(Sink).getMessage() + \" depends on a $@.\",\n  source.getNode(), \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-400/RemotePropertyInjection.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-400"
  },
  {
    "name": "MissingXFrameOptions.ql",
    "path": "javascript/ql/src/Security/CWE-451/MissingXFrameOptions.ql",
    "language": "javascript",
    "size": 680,
    "content": "/**\n * @name Missing X-Frame-Options HTTP header\n * @description If the 'X-Frame-Options' setting is not provided, a malicious user may be able to\n *              overlay their own UI on top of the site by using an iframe.\n * @kind problem\n * @problem.severity error\n * @security-severity 7.5\n * @precision low\n * @id js/missing-x-frame-options\n * @tags security\n *       external/cwe/cwe-451\n *       external/cwe/cwe-829\n */\n\nimport javascript\nimport semmle.javascript.frameworks.HTTP\n\nfrom Http::ServerDefinition server\nwhere not exists(server.getARouteHandler().getAResponseHeader(\"x-frame-options\"))\nselect server, \"This server never sets the 'X-Frame-Options' HTTP header.\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-451/MissingXFrameOptions.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-451"
  },
  {
    "name": "UnsafeDeserialization.ql",
    "path": "javascript/ql/src/Security/CWE-502/UnsafeDeserialization.ql",
    "language": "javascript",
    "size": 750,
    "content": "/**\n * @name Deserialization of user-controlled data\n * @description Deserializing user-controlled data may allow attackers to\n *              execute arbitrary code.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 9.8\n * @precision high\n * @id js/unsafe-deserialization\n * @tags security\n *       external/cwe/cwe-502\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.UnsafeDeserializationQuery\nimport UnsafeDeserializationFlow::PathGraph\n\nfrom UnsafeDeserializationFlow::PathNode source, UnsafeDeserializationFlow::PathNode sink\nwhere UnsafeDeserializationFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Unsafe deserialization depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-502/UnsafeDeserialization.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-502"
  },
  {
    "name": "HardcodedDataInterpretedAsCode.ql",
    "path": "javascript/ql/src/Security/CWE-506/HardcodedDataInterpretedAsCode.ql",
    "language": "javascript",
    "size": 973,
    "content": "/**\n * @name Hard-coded data interpreted as code\n * @description Transforming hard-coded data (such as hexadecimal constants) into code\n *              to be executed is a technique often associated with backdoors and should\n *              be avoided.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 9.1\n * @precision medium\n * @id js/hardcoded-data-interpreted-as-code\n * @tags security\n *       external/cwe/cwe-506\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.HardcodedDataInterpretedAsCodeQuery\nimport DataFlow::DeduplicatePathGraph<HardcodedDataInterpretedAsCodeFlow::PathNode, HardcodedDataInterpretedAsCodeFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere\n  HardcodedDataInterpretedAsCodeFlow::flowPath(source.getAnOriginalPathNode(),\n    sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink,\n  \"$@ is interpreted as \" + sink.getNode().(Sink).getKind() + \".\", source.getNode(),\n  \"Hard-coded data\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-506/HardcodedDataInterpretedAsCode.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-506"
  },
  {
    "name": "SensitiveGetQuery.ql",
    "path": "javascript/ql/src/Security/CWE-598/SensitiveGetQuery.ql",
    "language": "javascript",
    "size": 899,
    "content": "/**\n * @name Sensitive data read from GET request\n * @description Placing sensitive data in a GET request increases the risk of\n *              the data being exposed to an attacker.\n * @kind problem\n * @problem.severity warning\n * @security-severity 6.5\n * @precision high\n * @id js/sensitive-get-query\n * @tags security\n *       external/cwe/cwe-598\n */\n\nimport javascript\n\nfrom\n  Routing::RouteSetup setup, Routing::RouteHandler handler, Http::RequestInputAccess input,\n  SensitiveNode sensitive\nwhere\n  setup.getOwnHttpMethod() = \"GET\" and\n  setup.getAChild+() = handler and\n  input.getRouteHandler() = handler.getFunction() and\n  input.getKind() = \"parameter\" and\n  input.(DataFlow::SourceNode).flowsTo(sensitive) and\n  not sensitive.getClassification() = SensitiveDataClassification::id()\nselect input, \"$@ for GET requests uses query parameter as sensitive data.\", handler,\n  \"Route handler\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-598/SensitiveGetQuery.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-598"
  },
  {
    "name": "ClientSideUrlRedirect.ql",
    "path": "javascript/ql/src/Security/CWE-601/ClientSideUrlRedirect.ql",
    "language": "javascript",
    "size": 902,
    "content": "/**\n * @name Client-side URL redirect\n * @description Client-side URL redirection based on unvalidated user input\n *              may cause redirection to malicious web sites.\n * @kind path-problem\n * @problem.severity error\n * @security-severity 6.1\n * @precision high\n * @id js/client-side-unvalidated-url-redirection\n * @tags security\n *       external/cwe/cwe-079\n *       external/cwe/cwe-116\n *       external/cwe/cwe-601\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ClientSideUrlRedirectQuery\nimport DataFlow::DeduplicatePathGraph<ClientSideUrlRedirectFlow::PathNode, ClientSideUrlRedirectFlow::PathGraph>\n\nfrom PathNode source, PathNode sink\nwhere\n  ClientSideUrlRedirectFlow::flowPath(source.getAnOriginalPathNode(), sink.getAnOriginalPathNode())\nselect sink.getNode(), source, sink, \"Untrusted URL redirection depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-601/ClientSideUrlRedirect.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-601"
  },
  {
    "name": "ServerSideUrlRedirect.ql",
    "path": "javascript/ql/src/Security/CWE-601/ServerSideUrlRedirect.ql",
    "language": "javascript",
    "size": 779,
    "content": "/**\n * @name Server-side URL redirect\n * @description Server-side URL redirection based on unvalidated user input\n *              may cause redirection to malicious web sites.\n * @kind path-problem\n * @problem.severity warning\n * @security-severity 6.1\n * @id js/server-side-unvalidated-url-redirection\n * @tags security\n *       external/cwe/cwe-601\n * @precision high\n */\n\nimport javascript\nimport semmle.javascript.security.dataflow.ServerSideUrlRedirectQuery\nimport ServerSideUrlRedirectFlow::PathGraph\n\nfrom ServerSideUrlRedirectFlow::PathNode source, ServerSideUrlRedirectFlow::PathNode sink\nwhere ServerSideUrlRedirectFlow::flowPath(source, sink)\nselect sink.getNode(), source, sink, \"Untrusted URL redirection depends on a $@.\", source.getNode(),\n  \"user-provided value\"\n",
    "download_url": "https://raw.githubusercontent.com/github/codeql/main/javascript/ql/src/Security/CWE-601/ServerSideUrlRedirect.ql",
    "source": "GitHub CodeQL (Official Repository)",
    "security_category": "CWE-601"
  },
  {
    "rank": 1,
    "name": "Broken Access Control",
    "description": "Access control enforces policy such that users cannot act outside of their intended permissions.",
    "category": "Security Control",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 2,
    "name": "Cryptographic Failures",
    "description": "Failures related to cryptography which often lead to exposure of sensitive data.",
    "category": "Cryptography",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 3,
    "name": "Injection",
    "description": "Injection flaws allow attackers to relay malicious code through an application to another system.",
    "category": "Input Validation",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 4,
    "name": "Insecure Design",
    "description": "Flaws in design and architecture cannot be fixed by proper implementation.",
    "category": "Design",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 5,
    "name": "Security Misconfiguration",
    "description": "Improperly configured permissions on cloud services, unnecessary features enabled.",
    "category": "Configuration",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 6,
    "name": "Vulnerable and Outdated Components",
    "description": "Using components with known vulnerabilities undermines application defenses.",
    "category": "Dependencies",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 7,
    "name": "Identification and Authentication Failures",
    "description": "Authentication and session management functions are often implemented incorrectly.",
    "category": "Authentication",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 8,
    "name": "Software and Data Integrity Failures",
    "description": "Software and data integrity failures relate to code and infrastructure that is not protected from integrity violations.",
    "category": "Integrity",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 9,
    "name": "Security Logging and Monitoring Failures",
    "description": "This category helps detect, escalate, and respond to active breaches.",
    "category": "Monitoring",
    "source": "OWASP Top 10 2021 (Official)"
  },
  {
    "rank": 10,
    "name": "Server-Side Request Forgery",
    "description": "SSRF flaws occur when a web application fetches a remote resource without validating the user-supplied URL.",
    "category": "Request Validation",
    "source": "OWASP Top 10 2021 (Official)"
  }
]